{"version":3,"sources":["factories/dragAndDropFactory.ts","operations/initLocale.ts","reportWebVitals.tsx","components/Home.tsx","templates/ruleExamples.tsx","components/RuleExamples.tsx","templates/ruleTemplates.tsx","components/BasicTemplates.tsx","components/AdvancedTemplates.tsx","constants/global.ts","operations/getInstalledSmartApp.ts","operations/getInstalledSmartApps.ts","components/SmartApps.tsx","factories/ruleFactory.ts","factories/styleFactory.tsx","operations/getLocation.ts","store/DeviceContextStore.tsx","operations/executeDeviceCommand.ts","components/ActionDeviceDim.tsx","components/ActionDeviceOff.tsx","components/ActionDeviceOn.tsx","operations/executeRuleControl.ts","components/ActionRuleDisable.tsx","components/ActionRuleEnable.tsx","components/DeviceControls.tsx","components/Device.tsx","components/Power.tsx","components/SmartApp.tsx","operations/getRulesFromSummary.ts","components/Rule.tsx","components/Room.tsx","components/DashboardRooms.tsx","operations/getLocations.ts","components/Locations.tsx","components/DashboardApps.tsx","components/DashboardRules.tsx","components/DashboardScenes.tsx","App.tsx","index.tsx"],"names":["IDragAndDropType","init","i18n","use","LanguageDetector","ChainedBackend","initReactI18next","fallbackLng","load","keySeparator","interpolation","escapeValue","defaultNS","ns","react","useSuspense","backend","backends","LocalStorageBackend","HttpBackend","backendOptions","versions","loadPath","debug","reportWebVitals","onPerfEntry","a","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Home","className","href","Examples","label","value","RuleExamples","useState","rule","setRule","map","r","onClick","JSON","stringify","id","height","width","mode","theme","name","editorProps","$blockScrolling","setOptions","fontSize","BasicTemp","and","between","command","dropsBelow","dropsToOrBelow","ifElse","ifGreaterThan","ifGreaterThanOrEquals","lessThan","lessThanOrEquals","ifNot","or","risesAbove","risesToOrAbove","setLocationMode","AdvancedTemp","daylightRoutine","daylightRoutineDelayed","delayedCommand","nestedIf","morningSchedule","BasicTemplates","AdvancedTemplates","default","switchLevelRate","dashboardGridGap","deviceWidth","deviceMargin","deviceGridGap","devicesPerRow","controlsContainerWidth","minRoomSize","control","alpha","rgb","inactive","power","switch","motion","app","locked","floor","getInstalledSmartApp","isaId","fetch","process","response","json","getInstalledSmartApps","SmartAppGrid","styled","div","global","SmartApps","noonOffsetStart","noonOffsetEnd","t","useTranslation","smartApps","setSmartApps","smartAppData","setSmartAppData","betweenCondition","parseInt","REACT_APP_RULE_END_TIME_OFFSET","time","reference","TimeReference","Now","start","Noon","offset","integer","unit","IntervalUnit","Minute","end","motionCondition","equals","left","device","devices","component","capability","attribute","right","string","switchAction","motionDeviceId","switchLevel","rateLevel","commands","arguments","generateActionSwitchLevel","newRule","actions","if","addRule","method","headers","body","responseBody","useEffect","getSmartApps","getSmartApp","updatedSmartAppData","Object","assign","forEach","sa","values","to","installedAppId","scenes","length","switches","locks","DeviceBorderAnimation","keyframes","ActionLogo","props","ControlLogo","ControlStatus","ControlIcon","ControlContainer","button","attrs","p","isLinkedActive","isLockedActive","ControlActionContainer","canDrop","DashboardTitle","h2","DashboardSubTitle","h3","DashboardGridColumnHeader","span","getLocation","locationId","filteredRooms","initialDeviceData","rooms","rules","apps","sortRoom","l","rName","toUpperCase","lName","sortLabel","sortScene","sceneName","getDeviceDataFromServer","locationData","sort","filter","includes","getFallbackData","localStorageData","localStorage","getItem","swrKeySerializer","parse","DeviceContext","createContext","deviceData","DeviceContextStore","children","useSWR","_","revalidateOnMount","dedupingInterval","fallbackData","data","_setDeviceData","mutate","setDeviceData","useCallback","opts","deviceEventSource","useEventSource","source","useEventSourceListener","startOnInit","event","listener","loadDeviceDataFromServer","Provider","useDeviceContext","useContext","createDragConfig","type","dragId","displayName","subtype","item","collect","monitor","isDragging","createDropConfig","onDrop","accept","App","Device","Power","Rule","drop","some","collectMonitor","hovered","isOver","isOverCurrent","shallow","executeDeviceCommand","deviceId","commandArgs","commandBody","DimLevelUpDownArrowContainer","DimLevelSliderContainer","DimLevelSlider","BleedingControlActionContainer","progressPercentage","onDropStatic","allSwitches","dimLevelSliderValue","setDimLevelSliderValue","roomSwitches","d","roomId","Promise","all","s","ActionDeviceDim","sliderRef","useRef","onDragHover","current","dropTargetBoundingRect","getBoundingClientRect","yScaleOffset","Math","max","min","round","getClientOffset","y","top","dropHookConfig","useMemo","hover","useDrop","collectedProps","ref","ActionDeviceOff","words","ActionDeviceOn","executeRuleControl","ruleComponent","ruleEnabled","toString","ActionRuleDisable","ActionRuleEnable","DeviceControlsContainer","DeviceControls","deviceControls","push","c","deviceType","setActiveDevice","isLocked","useDrag","collected","drag","onMouseEnter","onMouseLeave","onTouchStart","onTouchEnd","room","isPowerOn","SmartApp","isRuleEnabled","appId","dayjs","extend","utc","objectSupport","getRulesFromSummary","ruleSummary","ruleParts","now","dayStartTime","dayNightTime","nightEndTime","year","month","day","date","hour","minute","second","milliseconds","isAfter","subtract","isBefore","add","enableDaylightRule","dayRule","startTime","endTime","motionDevices","motionSensors","controlDevice","dayControlSwitch","switchDevices","dayDimmableSwitches","dayNonDimmableSwitches","enableNightlightRule","nightRule","nightControlSwitch","nightDimmableSwitches","nightNonDimmableSwitches","enableTransitionRule","transitionRule","transitionOffDevices","transitionOnDevices","enableIdleRule","idleRule","motionTimeout","motionIdleTimeout","motionIdleTimeoutUnit","getRuleIcon","ruleType","rulePartId","ruleName","isRuleActive","isKeyRule","toLowerCase","iconography","isBetween","isLinkedRuleActive","rulePart","ruleBaseId","activeDeviceId","endsWith","isLockedRuleActive","lockedDevices","isLinkedDeviceActive","roomRuleSummaries","entries","k","v","isLockedDeviceActive","RoomContainer","RoomControlGrid","ceil","numDevices","numApps","RoomControlPower","RoomControlTitle","RoomControlTitleText","RoomControlTitleFloor","RoomControlFavorite","RoomControlDevice","RoomControlRule","gridLineName","RoomControlDeviceLabel","Room","isFavoriteRoom","setFavoriteRoom","useLocalStorage","activeDevice","domRef","roomLocks","roomMotion","roomApps","m","rm","reduce","activeRuleControlSwitches","did","roomParts","split","roomName","roomFloor","handleSwitchDeviceEvent","eventData","targetDevice","find","revalidate","handleLockDeviceEvent","handleMotionDeviceEvent","scrollIntoView","behavior","Fragment","format","temporaryDisableDaylightRule","temporaryDisableTransitionRule","temporaryDisableNightlightRule","temporaryDisableIdleRule","DashboardRoomGrid","roomCount","deviceControlsContainerWidth","parseFloat","roomContainerWidth","i","columns","iteratorArray","n","printColumnN","join","printColumns1ToN","printColumnBreakpoints","RoomGridContainer","DeviceControlsGridContainer","DashboardRooms","favoriteRoom","useParams","getLocations","LocationsGrid","Locations","locations","setLocations","getLocationsAsync","DashboardAppGrid","DashboardApps","lastUpdatedDate","DashboardRuleGrid","DashboardRules","deleteRule","location","ruleId","findRoomName","motionDevice","mm","executionLocation","DashboardSceneGrid","DashboardScenes","sceneId","createdBy","createdDate","lastExecutedDate","DndProvider","isMobile","TouchBackend","HTML5Backend","onSuccess","setItem","onError","removeItem","target","rel","path","element","GlobalStyles","createGlobalStyle","initLocale","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09dda116.chunk.js","sourcesContent":["import {DragSourceMonitor, DropTargetMonitor} from 'react-dnd';\r\n\r\nexport enum IDragAndDropType {\r\n  App = 'app',\r\n  Power = 'power',\r\n  Device = 'device',\r\n  Rule = 'rule'\r\n}\r\n\r\nexport interface IDragAndDropItem {\r\n  type: IDragAndDropType;\r\n  subtype?: string;\r\n  id: string;\r\n  displayName: string;\r\n}\r\n\r\nexport interface IDragConfig {\r\n  type: IDragAndDropType;\r\n  item: IDragAndDropItem;\r\n  collect: (monitor: DragSourceMonitor<IDragAndDropItem, IDragAndDropItem>) => IDragMonitor;\r\n}\r\n\r\nexport interface IDropConfig {\r\n  accept: IDragAndDropType[];\r\n  drop: (item: IDragAndDropItem, monitor: DropTargetMonitor) => Promise<IDragAndDropItem>;\r\n  canDrop?: (item: IDragAndDropItem, monitor: DropTargetMonitor<IDragAndDropItem, IDragAndDropItem>) => boolean;\r\n  collect?: (monitor: DropTargetMonitor<IDragAndDropItem, IDragAndDropItem>) => IDropMonitor;\r\n}\r\n\r\nexport interface IDragMonitor {\r\n  isDragging: boolean;\r\n}\r\n\r\nexport interface IDropMonitor {\r\n  hovered: boolean;\r\n  canDrop: boolean;\r\n  isOverCurrent: boolean;\r\n}\r\n\r\nexport const createDragConfig = (type: IDragAndDropType, dragId: string, displayName: string, subtype?: string): IDragConfig => ({\r\n  type: type,\r\n  item: {\r\n    type: type,\r\n    subtype: subtype,\r\n    id: dragId,\r\n    displayName: displayName\r\n  },\r\n  collect: (monitor: DragSourceMonitor) => ({\r\n    isDragging: monitor.isDragging()\r\n  })\r\n});\r\n\r\nexport const createDropConfig = (onDrop: (item: IDragAndDropItem, monitor: DropTargetMonitor) => Promise<IDragAndDropItem>, accept?: IDragAndDropType[]): IDropConfig => ({\r\n  accept: accept ?? [IDragAndDropType.App, IDragAndDropType.Device, IDragAndDropType.Power, IDragAndDropType.Rule],\r\n  drop: onDrop,\r\n  canDrop: item => (accept ?? [IDragAndDropType.App, IDragAndDropType.Device, IDragAndDropType.Power, IDragAndDropType.Rule]).some(a => a === item.type),\r\n  collect: collectMonitor => ({\r\n    hovered: collectMonitor.isOver(),\r\n    canDrop: collectMonitor.canDrop(),\r\n    isOverCurrent: collectMonitor.isOver({shallow: true})\r\n  })\r\n});","import i18n, {TFunction} from 'i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport ChainedBackend from 'i18next-chained-backend';\r\nimport LocalStorageBackend from 'i18next-localstorage-backend';\r\nimport HttpBackend from 'i18next-http-backend';\r\nimport {initReactI18next} from 'react-i18next';\r\n\r\nconst init = (): Promise<TFunction> => i18n\r\n  .use(LanguageDetector)\r\n  .use(ChainedBackend)\r\n  .use(initReactI18next)\r\n  .init({\r\n    fallbackLng: 'en-US',\r\n    load: 'currentOnly',\r\n    keySeparator: '.', // allow nesting in the translation json\r\n    interpolation: {\r\n      escapeValue: false // recommended by their quick start guide, since react already escapes values for us\r\n    },\r\n    defaultNS: 'default',\r\n    ns: ['default'],\r\n    react: {\r\n      useSuspense: false // TODO: come back around to this\r\n    },\r\n    backend: {\r\n      backends: [\r\n        LocalStorageBackend,\r\n        HttpBackend\r\n      ],\r\n      backendOptions: [\r\n        {\r\n          versions: {\r\n            'en-US': '0.0.1'\r\n          }\r\n        },\r\n        {\r\n          loadPath: '/{{lng}}/{{ns}}.json'\r\n        }\r\n      ]\r\n    },\r\n    debug: false\r\n  });\r\n\r\nexport default init;","import {ReportHandler} from 'web-vitals';\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nconst reportWebVitals = async (onPerfEntry?: ReportHandler): Promise<void> => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    await import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport '../App.scss';\r\n\r\nconst Home: React.FC = () => (\r\n  <div>\r\n    <div className=\"text\">\r\n      <p>\r\n        {' '}\r\n                Rules are lightweight automations that run on the\r\n        <em>\r\n                    SmartThings\r\n                    Cloud\r\n        </em>\r\n                .\r\n        <br />\r\n        <br />\r\n\r\n\r\n                A rule is defined in JSON format and contains a name, install source, and a list of actions.\r\n                A single rule can be used to contain multiple actions within it. These actions represent a\r\n                tree that is evaluated when the rule is triggered. This\r\n        {' '}\r\n        <strong>\r\n          <em>\r\n                        Rule Helper\r\n            {' '}\r\n          </em>\r\n        </strong>\r\n                is a lightweight, local React application to demonstrate the structure and syntax of Rules so\r\n                that you can begin creating your own.\r\n\r\n        <br />\r\n        <br />\r\n                This tool is targeted at developers and is designed to be a jumping off point to start creating your own rule builder app or\r\n                create a tool that will allow the installation of a rule into an endusers account. By adding addtional SmartThings APIs, one could\r\n                easily extend this app to allow the selection of devices for templated rules and beyond.\r\n        <br />\r\n        <br />\r\n        <strong>\r\n                    Benefits of Rules:\r\n        </strong>\r\n        <li>\r\n                    Based on the JSON format, which is easy to understand and dynamically create.\r\n        </li>\r\n        <li>\r\n                    Control flow statements and context managers are very intuitive.\r\n        </li>\r\n        <li>\r\n                    Rules can be as complex as your creativity will allow.\r\n        </li>\r\n        <br />\r\n        <strong>\r\n                    About the Rule Helper:\r\n        </strong>\r\n        <br />\r\n                This demonstration is divided in 3 components.\r\n\r\n        <li>\r\n          <strong>\r\n            <em>\r\n                            Rule Examples\r\n            </em>\r\n          </strong>\r\n          {' '}\r\n                    - Templates of the most popular legacy Groovy SmartApps\r\n                    converted to the new Rules JSON format.\r\n        </li>\r\n        <li>\r\n          <strong>\r\n            <em>\r\n                            Basic Templates\r\n            </em>\r\n          </strong>\r\n          {' '}\r\n                    - Sample for different Actions using the various\r\n                    Conditions, Operations, and Operands you can use in a Rule.\r\n        </li>\r\n        <li>\r\n          <strong>\r\n            <em>\r\n                            Advanced Templates\r\n            </em>\r\n          </strong>\r\n          {' '}\r\n                    - Combines elements presented by\r\n          {' '}\r\n          <em>\r\n                        Basic\r\n                        Templates\r\n          </em>\r\n          {' '}\r\n                    to demonstrate the flexibility of nested Conditions and concatenated Actions.\r\n        </li>\r\n        <br />\r\n        <em>\r\n          <strong>\r\n                        Note\r\n          </strong>\r\n                    : For further information about installing and managing Rules,\r\n                    visit the\r\n          {' '}\r\n          <a href=\"https://smartthings.developer.samsung.com/docs/api-ref/st-api.html#operation/createRule\">\r\n                        Rules API.\r\n          </a>\r\n        </em>\r\n      </p>\r\n      <br></br>\r\n    </div>\r\n  </div>\r\n);\r\n\r\n\r\nexport default Home;\r\n\r\n","import bonVoyage from './examples/bonVoyage.json';\r\nimport brightenMyPath from './examples/brightenMyPath.json';\r\nimport buttonIsPressed from './examples/buttonIsPressed.json';\r\nimport camerasOnWhenImAway from './examples/camerasOnWhenImAway.json';\r\nimport changeSecurityState from './examples/changeSecurityState.json';\r\nimport closeGarageWhenGone from './examples/closeGarageWhenGone.json';\r\nimport darkenBehindMe from './examples/darkenBehindMe.json';\r\nimport doorLockUpWhenClosed from './examples/doorLockUpWhenClosed.json';\r\nimport doorLocksOrUnlocks from './examples/doorLocksOrUnlocks.json';\r\nimport doorUnlockWhenHome from './examples/doorUnlockWhenHome.json';\r\nimport dropsBelow from './examples/dropsBelow.json';\r\nimport dropsToOrBelow from './examples/dropsToOrBelow.json';\r\nimport ifMotionBetween from './examples/ifMotionBetween.json';\r\nimport itsTooCold from './examples/itsTooCold.json';\r\nimport itsTooHot from './examples/itsTooHot.json';\r\nimport lightFollowsMe from './examples/lightFollowsMe.json';\r\nimport lightTurnOffDeparture from './examples/lightTurnOffDeparture.json';\r\nimport lightTurnOffMotion from './examples/lightTurnOffMotion.json';\r\nimport lightTurnOffSchedule from './examples/lightTurnOffSchedule.json';\r\nimport lightTurnOnIfDoor from './examples/lightTurnOnIfDoor.json';\r\nimport lightTurnOnMotion from './examples/lightTurnOnMotion.json';\r\nimport lightUpNight from './examples/lightUpNight.json';\r\nimport lockItWhenILeave from './examples/lockItWhenILeave.json';\r\nimport notifyWhenDoorOpen from './examples/notifyWhenDoorOpen.json';\r\nimport openGarageOnSwitch from './examples/openGarageOnSwitch.json';\r\nimport openGarageWhenHome from './examples/openGarageWhenHome.json';\r\nimport openGarageWhenHomeAlt from './examples/openGarageWhenHomeAlt.json';\r\nimport risesAbove from './examples/risesAbove.json';\r\nimport risesToOrAbove from './examples/risesToOrAbove.json';\r\nimport scheduledModeChange from './examples/scheduledModeChange.json';\r\nimport somethingTurnsOnOff from './examples/somethingTurnsOnOff.json';\r\nimport theBigSwitch from './examples/theBigSwitch.json';\r\nimport turnItOnFor5Minutes from './examples/turnItOnFor5Minutes.json';\r\nimport turnItOnWhenImHere from './examples/turnItOnWhenImHere.json';\r\nimport turnOnArrival from './examples/turnOnArrival.json';\r\nimport turnOnOffInterval from './examples/turnOnOffInterval.json';\r\nimport turnOnSchedule from './examples/turnOnSchedule.json';\r\nimport turnOnSunrise from './examples/turnOnSunrise.json';\r\nimport turnOnSunset from './examples/turnOnSunset.json';\r\nimport unlockItWhenIArrive from './examples/unlockItWhenIArrive.json';\r\n\r\n\r\nconst Examples = [\r\n  {label: 'Bon Voyage', value: bonVoyage},\r\n  {label: 'Brigthen My Path', value: brightenMyPath},\r\n  {label: 'Button Is Pressed', value: buttonIsPressed},\r\n  {label: 'Cameras On When I\\'m Away', value: camerasOnWhenImAway},\r\n  {label: 'Change Security State', value: changeSecurityState},\r\n  {label: 'Close Garage when Gone', value: closeGarageWhenGone},\r\n  {label: 'Darken Behind Me', value: darkenBehindMe},\r\n  {label: 'Door Lock Up When Closed', value: doorLockUpWhenClosed},\r\n  {label: 'Door Locks or Unlocks', value: doorLocksOrUnlocks},\r\n  {label: 'Door Unlock When Home', value: doorUnlockWhenHome},\r\n  {label: 'Drops Below', value: dropsBelow},\r\n  {label: 'Drops To or Below', value: dropsToOrBelow},\r\n  {label: 'If Motion Between', value: ifMotionBetween},\r\n  {label: 'Its Too Cold', value: itsTooCold},\r\n  {label: 'Its Too Hot', value: itsTooHot},\r\n  {label: 'Light Follows Me', value: lightFollowsMe},\r\n  {label: 'Light Turn Off Departure', value: lightTurnOffDeparture},\r\n  {label: 'Light Turn Off Motion', value: lightTurnOffMotion},\r\n  {label: 'Light Turn Off Schedule', value: lightTurnOffSchedule},\r\n  {label: 'Light Turn On If Door', value: lightTurnOnIfDoor},\r\n  {label: 'Light Turn On Motion', value: lightTurnOnMotion},\r\n  {label: 'Light Up Night', value: lightUpNight},\r\n  {label: 'Lock It When I Leave', value: lockItWhenILeave},\r\n  {label: 'Notify When Door Open', value: notifyWhenDoorOpen},\r\n  {label: 'Open Garage On Switch', value: openGarageOnSwitch},\r\n  {label: 'Open Garage When Home', value: openGarageWhenHome},\r\n  {label: 'Open Garage When Home Alt', value: openGarageWhenHomeAlt},\r\n  {label: 'Rises Above', value: risesAbove},\r\n  {label: 'Rises To Or Above', value: risesToOrAbove},\r\n  {label: 'Scheduled Mode Change', value: scheduledModeChange},\r\n  {label: 'Something Turns On Off', value: somethingTurnsOnOff},\r\n  {label: 'The Big Switch', value: theBigSwitch},\r\n  {label: 'Turn It On for 5 Minutes', value: turnItOnFor5Minutes},\r\n  {label: 'Turn It On When I\\'m Here', value: turnItOnWhenImHere},\r\n  {label: 'Turn On Arrival', value: turnOnArrival},\r\n  {label: 'Turn On-Off Interval', value: turnOnOffInterval},\r\n  {label: 'Turn On Schedule', value: turnOnSchedule},\r\n  {label: 'Turn On Sunrise', value: turnOnSunrise},\r\n  {label: 'Turn On Sunset', value: turnOnSunset},\r\n  {label: 'Unlock It When I Arrive', value: unlockItWhenIArrive}\r\n];\r\n\r\n\r\nexport default Examples;\r\n","import React, {useState} from 'react';\r\nimport AceEditor from 'react-ace';\r\nimport 'ace-builds/src-noconflict/mode-json';\r\nimport 'ace-builds/src-noconflict/theme-monokai';\r\nimport '../App.scss';\r\n// Rules\r\nimport Examples from '../templates/ruleExamples';\r\n\r\nconst RuleExamples: React.FC = () => {\r\n  const [rule, setRule] = useState('{}');\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <div className=\"columns\">\r\n          <div className=\"column\">\r\n            <aside className=\"menu left-menu\">\r\n              <ul className=\"menu-list\">\r\n                {Examples.map(r => (\r\n                  <li key={`r-${r.label}`}>\r\n                    <button\r\n                      className=\"button\"\r\n                      onClick={() => setRule(JSON.stringify(r.value, null, 2))}\r\n                    >\r\n                      {r.label}\r\n                    </button>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </aside>\r\n          </div>\r\n          <div className=\"column\">\r\n            <div id=\"example\">\r\n              <AceEditor\r\n                height=\"800px\"\r\n                width=\"1024px\"\r\n                mode=\"json\"\r\n                theme=\"monokai\"\r\n                name=\"textarea\"\r\n                value={rule}\r\n                editorProps={{$blockScrolling: true}}\r\n                setOptions={{fontSize: 15}}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RuleExamples;\r\n","// Basic templates\r\nimport and from './templates/and.json';\r\nimport between from './templates/between.json';\r\nimport command from './templates/command.json';\r\nimport dropsBelow from './templates/dropsBelow.json';\r\nimport dropsToOrBelow from './templates/dropsToOrBelow.json';\r\nimport ifElse from './templates/ifElse.json';\r\nimport ifGreaterThan from './templates/ifGreaterThan.json';\r\nimport ifGreaterThanOrEquals from './templates/ifGreaterThanOrEquals.json';\r\nimport ifNot from './templates/ifNot.json';\r\nimport lessThan from './templates/lessThan.json';\r\nimport lessThanOrEquals from './templates/lessThanOrEquals.json';\r\nimport or from './templates/or.json';\r\nimport risesAbove from './templates/risesAbove.json';\r\nimport risesToOrAbove from './templates/risesToOrAbove.json';\r\nimport setLocationMode from './templates/setLocationMode.json';\r\n// Advanced templates\r\nimport daylightRoutine from './templates/daylightRoutine.json';\r\nimport daylightRoutineDelayed from './templates/daylightRoutineDelayed.json';\r\nimport delayedCommand from './templates/delayedCommand.json';\r\nimport nestedIf from './templates/nestedIf.json';\r\nimport morningSchedule from './templates/morningSchedule.json';\r\n\r\n\r\nconst BasicTemp = [\r\n  {label: 'And operator', value: and},\r\n  {label: 'Between', value: between},\r\n  {label: 'Command', value: command},\r\n  {label: 'Drops Below', value: dropsBelow},\r\n  {label: 'Drops To Or Below', value: dropsToOrBelow},\r\n  {label: 'If Else', value: ifElse},\r\n  {label: 'If Greater Than', value: ifGreaterThan},\r\n  {label: 'If Greater Than or Equals', value: ifGreaterThanOrEquals},\r\n  {label: 'If less Than', value: lessThan},\r\n  {label: 'If less Than or Equals', value: lessThanOrEquals},\r\n  {label: 'If Not', value: ifNot},\r\n  {label: 'Or operator', value: or},\r\n  {label: 'Rises Above', value: risesAbove},\r\n  {label: 'Rises To Or Above', value: risesToOrAbove},\r\n  {label: 'Set Location Mode', value: setLocationMode}\r\n];\r\n\r\nconst AdvancedTemp = [\r\n  {label: 'Daylight Routine', value: daylightRoutine},\r\n  {label: 'Daylight Routine Delayed', value: daylightRoutineDelayed},\r\n  {label: 'Delayed command', value: delayedCommand},\r\n  {label: 'Nested If Condition', value: nestedIf},\r\n  {label: 'Morning Routine At Location', value: morningSchedule}\r\n];\r\n\r\n\r\nexport {\r\n  BasicTemp,\r\n  AdvancedTemp\r\n};\r\n","import React, {useState} from 'react';\r\nimport AceEditor from 'react-ace';\r\nimport 'ace-builds/src-noconflict/mode-json';\r\nimport 'ace-builds/src-noconflict/theme-monokai';\r\nimport '../App.scss';\r\n// Rule Templates\r\nimport {BasicTemp} from '../templates/ruleTemplates';\r\n\r\nconst BasicTemplates: React.FC = () => {\r\n  const [rule, setRule] = useState('{}');\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <div className=\"columns is-mobile\">\r\n          <div className=\"column is-one-third\">\r\n            <div className=\"left-menu\">\r\n              <div className=\"block\">\r\n                {BasicTemp.map(r => (\r\n                  <button\r\n                    key={`rule-${r.label}`}\r\n                    className=\"button\"\r\n                    onClick={() => setRule(JSON.stringify(r.value, null, 2))}\r\n                  >\r\n                    {r.label}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"column\">\r\n            <div id=\"example\">\r\n              <AceEditor\r\n                height=\"800px\"\r\n                width=\"1024px\"\r\n                mode=\"json\"\r\n                theme=\"monokai\"\r\n                name=\"textarea\"\r\n                value={rule}\r\n                editorProps={{$blockScrolling: true}}\r\n                setOptions={{fontSize: 15}}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BasicTemplates;\r\n","import React, {useState} from 'react';\r\nimport AceEditor from 'react-ace';\r\nimport 'ace-builds/src-noconflict/mode-json';\r\nimport 'ace-builds/src-noconflict/theme-monokai';\r\nimport '../App.scss';\r\n// Rule Templates\r\nimport {AdvancedTemp} from '../templates/ruleTemplates';\r\n\r\nconst AdvancedTemplates: React.FC = () => {\r\n  const [rule, setRule] = useState('{}');\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <div className=\"columns\">\r\n          <div className=\"column is-one-third\">\r\n            <div className=\"left-menu\">\r\n              <div className=\"block\">\r\n                {AdvancedTemp.map(r => (\r\n                  <button\r\n                    key={`rule-${r.label}`}\r\n                    className=\"button\"\r\n                    onClick={() => setRule(JSON.stringify(r.value, null, 2))}\r\n                  >\r\n                    {r.label}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"column\">\r\n            <div id=\"example\">\r\n              <AceEditor\r\n                height=\"800px\"\r\n                width=\"1024px\"\r\n                mode=\"json\"\r\n                theme=\"monokai\"\r\n                name=\"textarea\"\r\n                value={rule}\r\n                editorProps={{$blockScrolling: true}}\r\n                setOptions={{fontSize: 15}}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdvancedTemplates;\r\n","export default {\n  rule: {\n    default: {\n      switchLevelRate: 20\n    }\n  },\n  // side-bar: (3.5rem+0.125rem+0.125rem);\n  // room-width = 5x(3.5rem+0.125rem+0.125rem)+6x(0.125rem)\n  measurements: {\n    dashboardGridGap: '0.625rem',\n    deviceWidth: '3.5rem',\n    deviceMargin: '0.125rem',\n    deviceGridGap: '0.125rem',\n    devicesPerRow: 5,\n    controlsContainerWidth: '3.75rem',\n    minRoomSize: '19.25rem'\n  },\n  palette: {\n    control: {\n      alpha: '66',\n      rgb: {\n        inactive: 'cccccc',\n        power: 'E3E624',\n        switch: 'E3E624',\n        motion: '32E624',\n        rule: 'E68C24',\n        app: 'E68C24',\n        locked: 'E65E24',\n        floor: 'F35506'\n      }\n    }\n  }\n};\n","import {IResponseLocks, IResponseMotion, IResponseRooms, IResponseRules, IResponseScenes, IResponseSwitches} from '../types/sharedContracts';\r\n\r\nconst getInstalledSmartApp = async (isaId: string): Promise<IResponseSmartApp> => {\r\n  const response = await fetch(`${process.env.REACT_APP_APIHOST as string}/app/${isaId}`);\r\n  return await response.json() as IResponseSmartApp;\r\n};\r\n\r\nexport interface IResponseSmartApp {\r\n  installedAppId: string;\r\n  rooms: IResponseRooms;\r\n  scenes: IResponseScenes;\r\n  switches: IResponseSwitches;\r\n  locks: IResponseLocks;\r\n  motion: IResponseMotion;\r\n  rules: IResponseRules;\r\n}\r\n\r\nexport default getInstalledSmartApp;","const getInstalledSmartApps = async (): Promise<IResponseSmartApps> => {\r\n  const response = await fetch(`${process.env.REACT_APP_APIHOST as string}/app`);\r\n  return await response.json() as IResponseSmartApps;\r\n};\r\n\r\nexport type IResponseSmartApps = string[];\r\n\r\nexport default getInstalledSmartApps;","import React, {useEffect, useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport {useTranslation} from 'react-i18next';\nimport styled from 'styled-components';\nimport global from '../constants/global';\nimport getInstalledSmartApp, {IResponseSmartApp} from '../operations/getInstalledSmartApp';\nimport getInstalledSmartApps, {IResponseSmartApps} from '../operations/getInstalledSmartApps';\nimport {Rule, RuleRequest} from '@smartthings/core-sdk';\nimport {generateActionSwitchLevel, generateConditionBetween, generateConditionMotion} from '../factories/ruleFactory';\n\nconst SmartAppGrid = styled.div`\n    display: grid;\n    grid-template-columns: 3fr repeat(3, 1fr);\n    gap: ${global.measurements.dashboardGridGap};\n    grid-auto-rows: minmax(100px, auto);\n`;\n\ninterface ISmartAppData {\n  [isaId: string]: IResponseSmartApp;\n}\n\nconst SmartApps: React.FC<SmartAppProps> = () => {\n  const {t} = useTranslation();\n\n  const [smartApps, setSmartApps] = useState<IResponseSmartApps>([]);\n  const [smartAppData, setSmartAppData] = useState<ISmartAppData>({});\n\n  const betweenCondition = generateConditionBetween(parseInt(process.env.REACT_APP_RULE_START_TIME_OFFSET ?? '', 10), parseInt(process.env.REACT_APP_RULE_END_TIME_OFFSET ?? '', 10));\n  const motionCondition = generateConditionMotion(process.env.REACT_APP_RULE_MOTION_DEVICEID ?? '');\n  // eslint-disable-next-line no-magic-numbers\n  const switchAction = generateActionSwitchLevel(process.env.REACT_APP_RULE_SWITCH_DEVICEID ?? '', 75);\n  const newRule: RuleRequest = {\n    name: 'Motion Family Room',\n    actions: [\n      {\n        if: {\n          and: [\n            betweenCondition,\n            motionCondition\n          ],\n          then: [\n            switchAction\n          ]\n        }\n      }\n    ]\n  };\n\n  const addRule = async (isaId: string): Promise<Rule> => {\n    const response = await fetch(`${process.env.REACT_APP_APIHOST as string}/${isaId}/rule`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newRule)\n    });\n    const responseBody = await response.json() as Rule;\n    return responseBody;\n  };\n\n  useEffect(() => {\n    const getSmartApps = async (): Promise<void> => {\n      setSmartApps(await getInstalledSmartApps());\n    };\n\n    void getSmartApps();\n  }, []);\n\n  useEffect(() => {\n    const getSmartApp = async (isaId: string): Promise<void> => {\n      const updatedSmartAppData = Object.assign([], smartAppData);\n      updatedSmartAppData[isaId] = await getInstalledSmartApp(isaId);\n      setSmartAppData(updatedSmartAppData);\n    };\n\n    // TODO: this is dumb, do them in batch or something\n    smartApps.forEach(sa => {\n      void getSmartApp(sa);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [smartApps]); // ignore smartAppData\n\n  return (\n    <SmartAppGrid>\n      {Object.values(smartAppData).map(sa => (\n        <>\n          <Link to={`/dashboard/${sa.installedAppId}`}>\n            <div>\n              {t('smartapp.label')}\n:\n              {' '}\n              {sa.installedAppId}\n            </div>\n            <div>\n              {t('smartapp.sceneCount')}\n:\n              {' '}\n              {sa.scenes.length}\n            </div>\n            <div>\n              {t('smartapp.switchCount')}\n:\n              {' '}\n              {sa.switches.length}\n            </div>\n            <div>\n              {t('smartapp.lockCount')}\n:\n              {' '}\n              {sa.locks.length}\n            </div>\n            <div>\n              {t('smartapp.motionCount')}\n:\n              {' '}\n              {sa.motion.length}\n            </div>\n          </Link>\n          <button onClick={() => addRule(sa.installedAppId)}>\nAdd The Rule\n          </button>\n        </>\n      ))}\n    </SmartAppGrid>\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface SmartAppProps {\n}\n\nexport default SmartApps;\n","import {Action, Condition, IntervalUnit, TimeReference} from '@smartthings/core-sdk';\r\nimport global from '../constants/global';\r\n\r\nexport const generateConditionBetween = (noonOffsetStart: number, noonOffsetEnd: number): Condition => ({\r\n  between: {\r\n    value: {\r\n      time: {\r\n        reference: TimeReference.Now\r\n      }\r\n    },\r\n    start: {\r\n      time: {\r\n        reference: TimeReference.Noon,\r\n        offset: {\r\n          value: {\r\n            integer: noonOffsetStart\r\n          },\r\n          unit: IntervalUnit.Minute\r\n        }\r\n      }\r\n    },\r\n    end: {\r\n      time: {\r\n        reference: TimeReference.Noon,\r\n        offset: {\r\n          value: {\r\n            integer: noonOffsetEnd\r\n          },\r\n          unit: IntervalUnit.Minute\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const generateConditionMotion = (motionDeviceId: string): Condition => ({\r\n  equals: {\r\n    left: {\r\n      device: {\r\n        devices: [\r\n          motionDeviceId\r\n        ],\r\n        component: 'main',\r\n        capability: 'motionSensor',\r\n        attribute: 'motion'\r\n      }\r\n    },\r\n    right: {\r\n      // eslint-disable-next-line id-denylist, id-blacklist\r\n      string: 'active'\r\n    }\r\n  }\r\n});\r\n\r\nexport const generateActionSwitchLevel = (motionDeviceId: string, switchLevel: number, rateLevel: number = global.rule.default.switchLevelRate): Action => ({\r\n  command: {\r\n    devices: [\r\n      motionDeviceId\r\n    ],\r\n    commands: [\r\n      {\r\n        component: 'main',\r\n        capability: 'switchLevel',\r\n        command: 'setLevel',\r\n        arguments: [{integer: switchLevel}, {integer: rateLevel}]\r\n      }\r\n    ]\r\n  }\r\n});","import styled, {keyframes} from 'styled-components';\nimport global from '../constants/global';\n\nconst DeviceBorderAnimation = keyframes`\n    50% {\n        border: 1px solid rgba( 255, 255, 255, 0.18 );\n    }\n`;\n\nexport const ActionLogo = styled.div<{ fontSize?: string }>`\n  font-size: ${props => props.fontSize ?? 'x-large'};\n`;\n\nexport const ControlLogo = styled(ActionLogo)`\n  position: absolute;\n  height: 100%;\n  top: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: 50%;\n  z-index: -1;\n`;\n\nexport const ControlStatus = styled.div`\n    font-weight: 700;\n    line-height: 1;\n    background: #9995;\n    border-radius: 10px;\n    padding: 0.125rem 0;\n    min-width: 80%;\n`;\n\nexport const ControlIcon = styled.div<{ fontSize?: string }>`\n  font-size: ${props => props.fontSize ?? 'unset'};\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n`;\n\nexport const ControlContainer = styled.button.attrs<{isLinkedActive?: boolean; isLockedActive?: boolean}>(p => ({\n  className: `${p.isLinkedActive ? 'linkedActive' : ''} ${p.isLockedActive ? 'lockedActive' : ''}`\n}))<{isLinkedActive?: boolean; isLockedActive?: boolean; rgb: string}>`\n  height: ${global.measurements.deviceWidth};\n  width: ${global.measurements.deviceWidth};\n  display: flex;\n  flex: none;\n  flex-direction: column;\n  align-content: center;\n  align-items: center;\n  justify-content: space-between;\n  background: #${props => props.rgb}${global.palette.control.alpha};\n  box-shadow: 0 8px 32px 0 rgba( 31, 38, 135, 0.37 );\n  backdrop-filter: blur( 15px );\n  border-radius: 10px;\n  border: 1px solid rgba( 255, 255, 255, 0.18 );\n  margin: ${global.measurements.deviceMargin};\n  transition : border 500ms pulse;\n\n  &.linkedActive {\n    border: 1px solid #000;\n    animation-name: ${DeviceBorderAnimation};\n    animation-duration: 2.0s;\n    animation-timing-function: ease-in-out;\n    animation-iteration-count:infinite;\n  }\n\n  &.lockedActive {\n    border: 1px solid #f00;\n    animation-name: ${DeviceBorderAnimation};\n    animation-duration: 2.0s;\n    animation-timing-function: ease-in-out;\n    animation-iteration-count:infinite;\n  }\n`;\n\nexport const ControlActionContainer = styled(ControlContainer) <{canDrop?: boolean}>`\n  opacity: ${props => props.canDrop === false ? '.25' : '1'};\n  transition: opacity .25s ease-in-out;\n\n  input[type=\"range\"] {\n    -webkit-appearance: slider-vertical;\n  }\n`;\n\nexport const DashboardTitle = styled.h2`\n    font-weight: 600;\n`;\n\nexport const DashboardSubTitle = styled.h3`\n    font-weight: 600;\n`;\n\nexport const DashboardGridColumnHeader = styled.span`\n    display: flex;\n    justify-content: center;\n`;\n","import {IResponseLocation} from '../types/sharedContracts';\r\n\r\nconst getLocation = async (locationId: string): Promise<IResponseLocation> => {\r\n  const response = await fetch(`${process.env.REACT_APP_APIHOST as string}/location/${locationId}`);\r\n  return await response.json() as IResponseLocation;\r\n};\r\n\r\nexport default getLocation;","// src/theme-context.js\nimport React, {createContext, useContext, useCallback} from 'react';\nimport {Device, Room as IRoom, SceneSummary} from '@smartthings/core-sdk';\nimport useSWR, {KeyedMutator, unstable_serialize as swrKeySerializer} from 'swr';\nimport getLocation from '../operations/getLocation';\nimport {IResponseLocation, ISseRuleEvent} from '../types/sharedContracts';\nimport {useEventSource, useEventSourceListener} from 'react-sse-hooks';\n\nconst filteredRooms = ['DO NOT USE'];\n\nconst initialDeviceData: IResponseLocation = {\n  locationId: '',\n  rooms: [],\n  scenes: [],\n  switches: [],\n  locks: [],\n  motion: [],\n  rules: [],\n  apps: []\n};\n\nconst sortRoom = (r: IRoom, l: IRoom): 1 | -1 | 0 => {\n  const rName = r.name?.toUpperCase() ?? ''; // ignore upper and lowercase\n  const lName = l.name?.toUpperCase() ?? ''; // ignore upper and lowercase\n  return rName < lName ? -1 : rName > lName ? 1 : 0;\n};\n\nconst sortLabel = (r: Device, l: Device): 1 | -1 | 0 => {\n  const rName = r.label?.toUpperCase() ?? ''; // ignore upper and lowercase\n  const lName = l.label?.toUpperCase() ?? ''; // ignore upper and lowercase\n  return rName < lName ? -1 : rName > lName ? 1 : 0;\n};\n\nconst sortScene = (r: SceneSummary, l: SceneSummary): 1 | -1 | 0 => {\n  const rName = r.sceneName?.toUpperCase() ?? ''; // ignore upper and lowercase\n  const lName = l.sceneName?.toUpperCase() ?? ''; // ignore upper and lowercase\n  return rName < lName ? -1 : rName > lName ? 1 : 0;\n};\n\n// create context\nconst getDeviceDataFromServer = async (locationId: string): Promise<IResponseLocation> => {\n  if (!locationId) {\n    return initialDeviceData;\n  }\n\n  const locationData = await getLocation(locationId);\n  locationData.rooms = locationData.rooms?.sort(sortRoom).filter(r => !filteredRooms.includes(r.name as string)) ?? [];\n  locationData.scenes = locationData.scenes?.sort(sortScene) ?? [];\n  locationData.switches = locationData.switches?.sort(sortLabel) ?? [];\n  locationData.locks = locationData.locks?.sort(sortLabel) ?? [];\n  locationData.motion = locationData.motion?.sort(sortLabel) ?? [];\n  return locationData;\n};\n\nconst getFallbackData = (locationId: string): IResponseLocation => {\n  const localStorageData = localStorage.getItem(swrKeySerializer(['locationData', locationId]));\n  return localStorageData ? JSON.parse(localStorageData) as IResponseLocation : {\n    ...initialDeviceData,\n    locationId\n  };\n};\n\n// create context provider\nconst DeviceContext = createContext({deviceData: initialDeviceData} as IDeviceContextStore);\n\nexport const DeviceContextStore: React.FC<IDeviceContextStoreProps> = ({locationId, children}) => {\n  const {data: deviceData, mutate: _setDeviceData} = useSWR(['locationData', locationId], (_, l) => getDeviceDataFromServer(l), {\n    revalidateOnMount: true,\n    dedupingInterval: 5000,\n    fallbackData: getFallbackData(locationId)\n  });\n\n  const setDeviceData: typeof _setDeviceData = useCallback(async (data, opts) => await _setDeviceData(JSON.parse(JSON.stringify(data)), opts), [_setDeviceData]);\n\n  // listen to sse events\n  const deviceEventSource = useEventSource({\n    source: `${process.env.REACT_APP_APIHOST as string}/events`\n  });\n\n  // when any rules event comes in, just reload data from server\n  useEventSourceListener<ISseRuleEvent>({\n    source: deviceEventSource,\n    startOnInit: true,\n    event: {\n      name: 'rule',\n      listener: () => setDeviceData()\n    }\n  });\n\n  const loadDeviceDataFromServer = useCallback(async (): Promise<void> => {\n    // calling mutate w/out any data flags as stale and triggers a revalidate from server wrt the swr hook options\n    // for instance, it respects deduping config so if many components trigger this in quick succession it will dedupe to single call\n    await setDeviceData();\n  }, [setDeviceData]);\n\n  return (\n    <DeviceContext.Provider value={{\n      deviceData: deviceData || initialDeviceData,\n      setDeviceData: setDeviceData,\n      loadDeviceDataFromServer: loadDeviceDataFromServer\n    }}\n    >\n      {children}\n    </DeviceContext.Provider>\n  );\n};\n\n// export ability to use the context\nexport const useDeviceContext = (): IDeviceContextStore => useContext(DeviceContext);\n\nexport interface IDeviceContextStore {\n  deviceData: IResponseLocation;\n  setDeviceData: KeyedMutator<IResponseLocation>;\n  loadDeviceDataFromServer: () => Promise<void>;\n}\n\nexport interface IDeviceContextStoreProps {\n  locationId: string;\n  children: React.ReactNode;\n}\n","import {Command} from '@smartthings/core-sdk';\r\n\r\nexport const executeDeviceCommand = async (deviceId: string, capability: string, command: string, component?: string, commandArgs?: (Record<string, unknown> | string | number)[]): Promise<Response> => {\r\n  const commandBody: Command = {\r\n    capability: capability,\r\n    component: component ?? 'main',\r\n    command: command,\r\n    arguments: commandArgs\r\n  };\r\n\r\n  const response = await fetch(`${process.env.REACT_APP_APIHOST as string}/device/${deviceId}`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(commandBody),\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  });\r\n    \r\n  return response;\r\n};\r\n\r\nexport default executeDeviceCommand;","import React, {useMemo, useRef, useState} from 'react';\r\nimport {DropTargetMonitor, useDrop} from 'react-dnd';\r\nimport styled from 'styled-components';\r\nimport global from '../constants/global';\r\nimport {createDropConfig, IDragAndDropItem, IDragAndDropType} from '../factories/dragAndDropFactory';\r\nimport {ControlActionContainer} from '../factories/styleFactory';\r\nimport executeDeviceCommand from '../operations/executeDeviceCommand';\r\nimport {useDeviceContext} from '../store/DeviceContextStore';\r\nimport {IResponseSwitches} from '../types/sharedContracts';\r\n\r\nconst dimLevelMin = 5;\r\nconst dimLevelMax = 95;\r\nconst negative100Percent = -100;\r\n\r\nconst DimLevelUpDownArrowContainer = styled.div`\r\n  display: flex;\r\n  font-size: x-large;\r\n`;\r\n\r\nconst DimLevelSliderContainer = styled.div`\r\n  height: 80%;\r\n  width: 50%;\r\n  border-radius: 2rem;\r\n  position: relative;\r\n  overflow: hidden;\r\n  transition: all 0.5s;\r\n  will-change: transform;\r\n  box-shadow: 0 0 5px #e76f51;\r\n`;\r\n\r\nconst DimLevelSlider = styled.div`\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n  content: \"\";\r\n  background-color: #e76f51;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: -100%;\r\n  border-radius: inherit;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items:center;\r\n  color: white;\r\n  font-family: sans-serif;\r\n  transition: all 0.15s;\r\n`;\r\n\r\n// slider level bottom is controlled here so we can rely on isOverCurrent also\r\nconst BleedingControlActionContainer = styled(ControlActionContainer) <{progressPercentage: number; isOverCurrent?: boolean}>`\r\n  flex-grow: 1;\r\n\r\n  .dim-level-slider {\r\n    bottom: ${props => props.isOverCurrent ? negative100Percent + props.progressPercentage : negative100Percent}%;\r\n  }\r\n`;\r\n\r\nconst onDropStatic = async (item: IDragAndDropItem, allSwitches: IResponseSwitches, dimLevelSliderValue: number, setDimLevelSliderValue: (value: React.SetStateAction<number>) => void): Promise<IDragAndDropItem> => {\r\n  // component: 'main',\r\n  // capability: 'switchLevel',\r\n  // command: 'setLevel',\r\n  // arguments: [{integer: switchLevel}, {integer: rateLevel}]\r\n\r\n  // this shouldn't happen, but just incase we drop and have never updated state dont unintentionally dim light to '0', rather do nothing\r\n  if (dimLevelSliderValue <= 0) {\r\n    return item;\r\n  }\r\n\r\n  try {\r\n    if (item.type === IDragAndDropType.Device) {\r\n      // eslint-disable-next-line no-magic-numbers\r\n      await executeDeviceCommand(item.id, 'switchLevel', 'setLevel', 'main', [dimLevelSliderValue, 50]);\r\n    } else if (item.type === IDragAndDropType.Power) {\r\n      const roomSwitches = allSwitches.filter(d => d.roomId === item.id);\r\n      // TODO: this can be a single call if we expose the API properly\r\n      // eslint-disable-next-line no-magic-numbers\r\n      await Promise.all(roomSwitches.map(s => executeDeviceCommand(s.deviceId, 'switchLevel', 'setLevel', 'main', [dimLevelSliderValue, 50])));\r\n    }\r\n    return item;\r\n  } finally {\r\n    setDimLevelSliderValue(0);\r\n  }\r\n};\r\n\r\nconst ActionDeviceDim: React.FC = () => {\r\n  const {deviceData} = useDeviceContext();\r\n\r\n  const [dimLevelSliderValue, setDimLevelSliderValue] = useState(0);\r\n\r\n  const sliderRef = useRef<HTMLInputElement>(null);\r\n\r\n  const onDragHover = (_: IDragAndDropItem, monitor: DropTargetMonitor<IDragAndDropItem, IDragAndDropItem>): void => {\r\n    if (!monitor.canDrop() || !sliderRef.current) {\r\n      return;\r\n    }\r\n\r\n    // take mouse-y - container-top / container-height for '%' of vertical location in container, then min/max it in the allowed range\r\n    const dropTargetBoundingRect = sliderRef.current.getBoundingClientRect();\r\n    const yScaleOffset = 100 -\r\n      Math.max(\r\n        Math.min(\r\n          dimLevelMax,\r\n          Math.round(\r\n            ((monitor.getClientOffset()!.y - Math.round(dropTargetBoundingRect.top)) / dropTargetBoundingRect.height) * 100\r\n          )\r\n        ),\r\n        dimLevelMin\r\n      );\r\n\r\n    setDimLevelSliderValue(yScaleOffset);\r\n  };\r\n\r\n  // create a standard hook config from factory like elsewhere, then spread additional 'hover' prop onto it\r\n  const dropHookConfig = useMemo(() => {\r\n    const onDrop = (item: IDragAndDropItem): Promise<IDragAndDropItem> => onDropStatic(item, deviceData.switches, dimLevelSliderValue, setDimLevelSliderValue);\r\n    return {...(createDropConfig(onDrop, [IDragAndDropType.Power, IDragAndDropType.Device])), hover: onDragHover};\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dimLevelSliderValue]);\r\n\r\n  const [collectedProps, drop] = useDrop(() => dropHookConfig, [dimLevelSliderValue]);\r\n\r\n  const leftControl = (\r\n    <BleedingControlActionContainer\r\n      rgb={global.palette.control.rgb.inactive}\r\n      ref={drop}\r\n      progressPercentage={dimLevelSliderValue}\r\n      {...collectedProps}\r\n    >\r\n      <DimLevelUpDownArrowContainer>\r\n        🔺\r\n      </DimLevelUpDownArrowContainer>\r\n      <DimLevelSliderContainer\r\n        className=\"dim-level-slider-container\"\r\n        ref={sliderRef}\r\n      >\r\n        <DimLevelSlider className=\"dim-level-slider\" />\r\n      </DimLevelSliderContainer>\r\n      <DimLevelUpDownArrowContainer>\r\n        🔻\r\n      </DimLevelUpDownArrowContainer>\r\n    </BleedingControlActionContainer>\r\n  );\r\n\r\n  return leftControl;\r\n};\r\n\r\nexport default ActionDeviceDim;\r\n","import React from 'react';\nimport {useDrop} from 'react-dnd';\nimport global from '../constants/global';\nimport {createDropConfig, IDragAndDropItem, IDragAndDropType} from '../factories/dragAndDropFactory';\nimport {ControlActionContainer, ActionLogo, ControlStatus} from '../factories/styleFactory';\nimport executeDeviceCommand from '../operations/executeDeviceCommand';\nimport {useDeviceContext} from '../store/DeviceContextStore';\n\nconst ActionDeviceOff: React.FC<IDeviceOffActionProps> = ({words}) => {\n  const {deviceData} = useDeviceContext();\n\n  const onDrop = async (item: IDragAndDropItem): Promise<IDragAndDropItem> => {\n    if (item.type === IDragAndDropType.Device) {\n      await executeDeviceCommand(item.id, 'switch', 'off');\n    } else if (item.type === IDragAndDropType.Power) {\n      const roomSwitches = deviceData.switches.filter(d => d.roomId === item.id);\n      // TODO: this can be a single call if we expose the API properly\n      await Promise.all(roomSwitches.map(s => executeDeviceCommand(s.deviceId, 'switch', 'off')));\n    }\n    return item;\n  };\n\n  const [collectedProps, drop] = useDrop(() => createDropConfig(onDrop, [IDragAndDropType.Power, IDragAndDropType.Device]));\n\n  const leftControl = (\n    <ControlActionContainer\n      rgb={global.palette.control.rgb.inactive}\n      ref={drop}\n      {...collectedProps}\n    >\n      <ActionLogo fontSize=\"larger\">\n          ❎\n      </ActionLogo>\n      <ControlStatus>\n        {words}\n      </ControlStatus>\n    </ControlActionContainer>\n  );\n\n  return leftControl;\n};\n\nexport interface IDeviceOffActionProps {\n  words: string;\n}\n\nexport default ActionDeviceOff;\n","import React from 'react';\nimport {useDrop} from 'react-dnd';\nimport global from '../constants/global';\nimport {createDropConfig, IDragAndDropItem, IDragAndDropType} from '../factories/dragAndDropFactory';\nimport {ControlActionContainer, ActionLogo, ControlStatus} from '../factories/styleFactory';\nimport executeDeviceCommand from '../operations/executeDeviceCommand';\n\nconst ActionDeviceOn: React.FC<IActionDeviceOnProps> = ({words}) => {\n  const onDrop = async (item: IDragAndDropItem): Promise<IDragAndDropItem> => {\n    if (item.type === IDragAndDropType.Device) {\n      await executeDeviceCommand(item.id, 'switch', 'on');\n    }\n    return item;\n  };\n\n  const [collectedProps, drop] = useDrop(() => createDropConfig(onDrop, [IDragAndDropType.Device]));\n  const leftControl = (\n    <ControlActionContainer\n      rgb={global.palette.control.rgb.inactive}\n      ref={drop}\n      {...collectedProps}\n    >\n      <ActionLogo fontSize=\"larger\">\n          ✅\n      </ActionLogo>\n      <ControlStatus>\n        {words}\n      </ControlStatus>\n    </ControlActionContainer>\n  );\n\n  return leftControl;\n};\n\nexport interface IActionDeviceOnProps {\n  words: string;\n}\n\nexport default ActionDeviceOn;\n","import {IRuleComponentType} from '../types/sharedContracts';\r\n\r\nconst executeRuleControl = async (locationId: string, installedAppId: string, ruleComponent: IRuleComponentType | 'all', ruleEnabled: boolean): Promise<Response> => {\r\n  const response = await fetch(`${process.env.REACT_APP_APIHOST as string}/location/${locationId}/rule/${installedAppId}/${ruleComponent}/${ruleEnabled.toString()}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  });\r\n\r\n  return response;\r\n};\r\n\r\nexport default executeRuleControl;\r\n","import React from 'react';\nimport {useDrop} from 'react-dnd';\nimport global from '../constants/global';\nimport {createDropConfig, IDragAndDropItem, IDragAndDropType} from '../factories/dragAndDropFactory';\nimport {ControlActionContainer, ActionLogo, ControlStatus} from '../factories/styleFactory';\nimport executeRuleControl from '../operations/executeRuleControl';\nimport {useDeviceContext} from '../store/DeviceContextStore';\nimport {IRuleComponentType} from '../types/sharedContracts';\n\nconst ActionRuleDisable: React.FC<IActionRuleDisableProps> = ({words}) => {\n  const {deviceData} = useDeviceContext();\n\n  const onDrop = async (item: IDragAndDropItem): Promise<IDragAndDropItem> => {\n    if (item.type === IDragAndDropType.App) {\n      await executeRuleControl(deviceData.locationId, item.id, 'all', false);\n    }\n    if (item.type === IDragAndDropType.Rule) {\n      await executeRuleControl(deviceData.locationId, item.id, item.subtype as IRuleComponentType, false);\n    }\n    return item;\n  };\n\n  const [collectedProps, drop] = useDrop(() => createDropConfig(onDrop, [IDragAndDropType.Rule, IDragAndDropType.App]));\n\n  const leftControl = (\n    <ControlActionContainer\n      rgb={global.palette.control.rgb.inactive}\n      ref={drop}\n      {...collectedProps}\n    >\n      <ActionLogo fontSize=\"x-large\">\n          ⏸\n      </ActionLogo>\n      <ControlStatus>\n        {words}\n      </ControlStatus>\n    </ControlActionContainer>\n  );\n\n  return leftControl;\n};\n\nexport interface IActionRuleDisableProps {\n  words: string;\n}\n\nexport default ActionRuleDisable;\n","import React from 'react';\nimport {useDrop} from 'react-dnd';\nimport global from '../constants/global';\nimport {createDropConfig, IDragAndDropItem, IDragAndDropType} from '../factories/dragAndDropFactory';\nimport {ControlActionContainer, ActionLogo, ControlStatus} from '../factories/styleFactory';\nimport executeRuleControl from '../operations/executeRuleControl';\nimport {useDeviceContext} from '../store/DeviceContextStore';\nimport {IRuleComponentType} from '../types/sharedContracts';\n\nconst ActionRuleEnable: React.FC<IActionRuleEnableProps> = ({words}) => {\n  const {deviceData} = useDeviceContext();\n\n  const onDrop = async (item: IDragAndDropItem): Promise<IDragAndDropItem> => {\n    if (item.type === IDragAndDropType.App) {\n      await executeRuleControl(deviceData.locationId, item.id, 'all', true);\n    }\n    if (item.type === IDragAndDropType.Rule) {\n      await executeRuleControl(deviceData.locationId, item.id, item.subtype as IRuleComponentType, true);\n    }\n    return item;\n  };\n\n  const [collectedProps, drop] = useDrop(() => createDropConfig(onDrop, [IDragAndDropType.Rule, IDragAndDropType.App]));\n\n  const leftControl = (\n    <ControlActionContainer\n      rgb={global.palette.control.rgb.inactive}\n      ref={drop}\n      {...collectedProps}\n    >\n      <ActionLogo fontSize=\"x-large\">\n          ▶\n      </ActionLogo>\n      <ControlStatus>\n        {words}\n      </ControlStatus>\n    </ControlActionContainer>\n  );\n\n  return leftControl;\n};\n\nexport interface IActionRuleEnableProps {\n  words: string;\n}\n\nexport default ActionRuleEnable;\n","import React, {ReactNode} from 'react';\r\nimport styled from 'styled-components';\r\nimport ActionDeviceDim from './ActionDeviceDim';\r\nimport ActionDeviceOff from './ActionDeviceOff';\r\nimport ActionDeviceOn from './ActionDeviceOn';\r\nimport ActionRuleDisable from './ActionRuleDisable';\r\nimport ActionRuleEnable from './ActionRuleEnable';\r\n\r\nconst DeviceControlsContainer = styled.div`\r\n  height: 75vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n  position: sticky;\r\n  top: 0;\r\n`;\r\n\r\nconst DeviceControls: React.FC = () => {\r\n  const deviceControls: ReactNode[] = [];\r\n\r\n  deviceControls.push(\r\n    <ActionDeviceOn\r\n      key=\"control-action-power-on\"\r\n      words=\"On\"\r\n    />\r\n  );\r\n  deviceControls.push(\r\n    <ActionRuleEnable\r\n      key=\"control-action-rule-enable\"\r\n      words=\"Enable\"\r\n    />\r\n  );\r\n  deviceControls.push(\r\n    <ActionDeviceDim\r\n      key=\"control-action-power-dim\"\r\n    />\r\n  );\r\n  deviceControls.push(\r\n    <ActionRuleDisable\r\n      key=\"control-action-rule-disable\"\r\n      words=\"Disable\"\r\n    />\r\n  );\r\n  deviceControls.push(\r\n    <ActionDeviceOff\r\n      key=\"control-action-power-off\"\r\n      words=\"Off\"\r\n    />\r\n  );\r\n\r\n  return (\r\n    <DeviceControlsContainer>\r\n      {deviceControls.map(c => c)}\r\n    </DeviceControlsContainer>\r\n  );\r\n};\r\n\r\nexport default DeviceControls;\r\n","import React from 'react';\nimport {useDrag} from 'react-dnd';\nimport global from '../constants/global';\nimport {createDragConfig, IDragAndDropType} from '../factories/dragAndDropFactory';\nimport {ControlContainer, ControlIcon, ControlLogo, ControlStatus} from '../factories/styleFactory';\nimport {IActiveControl} from '../types/interfaces';\nimport {IDevice} from '../types/sharedContracts';\n\nconst Device: React.FC<IDeviceProps> = ({device, deviceType, setActiveDevice, isLocked, isLinkedActive, isLockedActive}) => {\n  const [collected, drag] = useDrag(() => (createDragConfig(IDragAndDropType.Device, device.deviceId, device.label!)));\n\n  return deviceType === 'Switch' ? (\n    <ControlContainer\n      ref={drag}\n      {...collected}\n      rgb={device.value === 'on' ? isLocked ? `${global.palette.control.rgb.locked}` : `${global.palette.control.rgb.switch}` : `${global.palette.control.rgb.inactive}`}\n      onMouseEnter={() => setActiveDevice({name: device.label! || device.deviceId, id: device.deviceId})}\n      onMouseLeave={() => setActiveDevice(null)}\n      onTouchStart={() => setActiveDevice({name: device.label! || device.deviceId, id: device.deviceId})}\n      onTouchEnd={() => setActiveDevice(null)}\n      isLinkedActive={isLinkedActive}\n      isLockedActive={isLockedActive}\n    >\n      {/* <span>{t('dashboard.switch.header.deviceId')}: {device.deviceId}</span> */}\n      <ControlLogo>\n        💡\n      </ControlLogo>\n      <ControlStatus>\n        {device.value}\n      </ControlStatus>\n      {isLocked && (\n        <ControlIcon>\n          🔒\n        </ControlIcon>\n      )}\n    </ControlContainer>\n  ) : deviceType === 'Lock' ? (\n    <ControlContainer\n      ref={drag}\n      {...collected}\n      rgb={`${global.palette.control.rgb.inactive}`}\n      onMouseEnter={() => setActiveDevice({name: device.label! || device.deviceId, id: device.deviceId})}\n      onMouseLeave={() => setActiveDevice(null)}\n      onTouchStart={() => setActiveDevice({name: device.label! || device.deviceId, id: device.deviceId})}\n      onTouchEnd={() => setActiveDevice(null)}\n    >\n      {/* <span>{t('dashboard.lock.header.deviceId')}: {device.deviceId}</span> */}\n      <ControlLogo>\n        {device.value === 'locked' ? '🔒' : '🔓'}\n      </ControlLogo>\n      <ControlStatus>\n        {device.value}\n      </ControlStatus>\n    </ControlContainer>\n  ) : (\n    <ControlContainer\n      ref={drag}\n      {...collected}\n      rgb={device.value === 'active' ? `${global.palette.control.rgb.motion}` : `${global.palette.control.rgb.inactive}`}\n      onMouseEnter={() => setActiveDevice({name: device.label! || device.deviceId, id: device.deviceId})}\n      onMouseLeave={() => setActiveDevice(null)}\n      onTouchStart={() => setActiveDevice({name: device.label! || device.deviceId, id: device.deviceId})}\n      onTouchEnd={() => setActiveDevice(null)}\n      isLinkedActive={isLinkedActive}\n      isLockedActive={isLockedActive}\n    >\n      {/* <span>{t('dashboard.motion.header.deviceId')}: {device.deviceId}</span> */}\n      <ControlLogo>\n        {device.value === 'active' ? '🏃' : '🧍'}\n      </ControlLogo>\n      <ControlStatus>\n        {device.value}\n      </ControlStatus>\n    </ControlContainer>\n  );\n};\n\nexport type DeviceType = 'Switch' | 'Lock' | 'Motion';\n\nexport interface IDeviceProps {\n  device: IDevice;\n  deviceType: DeviceType;\n  setActiveDevice: (value: IActiveControl | null) => void;\n  isLocked?: boolean;\n  isLinkedActive?: boolean;\n  isLockedActive?: boolean;\n}\n\nexport default Device;\n","import React from 'react';\nimport {Room as IRoom} from '@smartthings/core-sdk';\nimport {ControlContainer, ControlLogo, ControlStatus} from '../factories/styleFactory';\nimport {IActiveControl} from '../types/interfaces';\nimport global from '../constants/global';\nimport {useDrag} from 'react-dnd';\nimport {createDragConfig, IDragAndDropType} from '../factories/dragAndDropFactory';\n\nconst Power: React.FC<IPowerProps> = ({room, isPowerOn, setActiveDevice}) => {\n  const [collected, drag] = useDrag(() => (createDragConfig(IDragAndDropType.Power, room.roomId!, room.name!)));\n\n  return (\n    <ControlContainer\n      ref={drag}\n      {...collected}\n      rgb={isPowerOn ? `${global.palette.control.rgb.power}` : `${global.palette.control.rgb.inactive}`}\n      onMouseEnter={() => setActiveDevice({name: room.name!, id: room.roomId!})}\n      onMouseLeave={() => setActiveDevice(null)}\n      onTouchStart={() => setActiveDevice({name: room.name!, id: room.roomId!})}\n      onTouchEnd={() => setActiveDevice(null)}\n    >\n      <ControlLogo>\n        🔨\n      </ControlLogo>\n      <ControlStatus>\n        power\n      </ControlStatus>\n    </ControlContainer>\n  );\n};\n\nexport interface IPowerProps {\n  room: IRoom;\n  isPowerOn: boolean;\n  setActiveDevice: (value: IActiveControl | null) => void;\n}\n\nexport default Power;\n","import React from 'react';\nimport {useDrag} from 'react-dnd';\nimport global from '../constants/global';\nimport {createDragConfig, IDragAndDropType} from '../factories/dragAndDropFactory';\nimport {ControlContainer, ControlLogo, ControlStatus} from '../factories/styleFactory';\nimport {IActiveControl} from '../types/interfaces';\nimport {IApp} from '../types/sharedContracts';\n\nconst SmartApp: React.FC<ISmartAppProps> = ({app, isRuleEnabled, setActiveDevice}) => {\n  const [collected, drag] = useDrag(() => (createDragConfig(IDragAndDropType.App, app.installedAppId, app.displayName!)));\n\n  return (\n    <ControlContainer\n      ref={drag}\n      {...collected}\n      rgb={isRuleEnabled ? `${global.palette.control.rgb.app}` : `${global.palette.control.rgb.inactive}`}\n      onMouseEnter={() => setActiveDevice({name: app.displayName!, id: app.appId})}\n      onMouseLeave={() => setActiveDevice(null)}\n      onTouchStart={() => setActiveDevice({name: app.displayName!, id: app.appId})}\n      onTouchEnd={() => setActiveDevice(null)}\n    >\n      <ControlLogo>\n          🤖\n      </ControlLogo>\n      <ControlStatus>\n        RuleSet\n      </ControlStatus>\n    </ControlContainer>\n  );\n};\n\nexport interface ISmartAppProps {\n  app: IApp;\n  isRuleEnabled: boolean;\n  setActiveDevice: (value: IActiveControl | null) => void;\n}\n\nexport default SmartApp;\n","import dayjs, {Dayjs} from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport objectSupport from 'dayjs/plugin/objectSupport';\nimport {DeviceContext, IRuleSummary} from '../types/sharedContracts';\nimport {IntervalUnit} from '@smartthings/core-sdk';\ndayjs.extend(utc);\ndayjs.extend(objectSupport);\n\nexport interface IRuleRange {\n  startTime: Dayjs; // dayjs/time\n  endTime: Dayjs; // dayjs/time\n  motionDevices: DeviceContext[];\n  controlDevice: DeviceContext;\n  switchDevices: DeviceContext[];\n}\n\nexport interface IRuleTransition {\n  time: Dayjs;\n  transitionOffDevices: DeviceContext[];\n  transitionOnDevices: DeviceContext[];\n}\n\nexport interface IRuleIdle {\n  motionTimeout: string;\n  motionDevices: DeviceContext[];\n  switchDevices: DeviceContext[];\n}\n\n// this to factory\nconst getRulesFromSummary = (ruleSummary: IRuleSummary): { dayRule?: IRuleRange; nightRule?: IRuleRange; transitionRule?: IRuleTransition; idleRule?: IRuleIdle } => {\n  const ruleParts: { dayRule?: IRuleRange; nightRule?: IRuleRange; transitionRule?: IRuleTransition; idleRule?: IRuleIdle } = {};\n\n  if (!ruleSummary) {\n    return ruleParts;\n  }\n\n  // the data coming from server is actually off, encoded in UTC when it is local, so... we do this for now\n  const now = dayjs();\n  let dayStartTime = dayjs(ruleSummary.dayStartTime);\n  let dayNightTime = dayjs(ruleSummary.dayNightTime);\n  let nightEndTime = dayjs(ruleSummary.nightEndTime);\n  /* eslint-disable @typescript-eslint/ban-ts-comment */\n  // @ts-ignore | i dunno, the objectSupport plugin isnt being recognized as valid\n  dayStartTime = dayjs({year: now.year(), month: now.month(), day: now.date(), hour: dayStartTime.utc().hour(), minute: dayStartTime.utc().minute(), second: 0, milliseconds: 0});\n  // @ts-ignore | i dunno, the objectSupport plugin isnt being recognized as valid\n  dayNightTime = dayjs({year: now.year(), month: now.month(), day: now.date(), hour: dayNightTime.utc().hour(), minute: dayNightTime.utc().minute(), second: 0, milliseconds: 0});\n  // @ts-ignore | i dunno, the objectSupport plugin isnt being recognized as valid\n  nightEndTime = dayjs({year: now.year(), month: now.month(), day: now.date(), hour: nightEndTime.utc().hour(), minute: nightEndTime.utc().minute(), second: 0, milliseconds: 0});\n  /* eslint-enable @typescript-eslint/ban-ts-comment */\n\n  // first we order the time ranges\n  if (dayStartTime.isAfter(dayNightTime)) {\n    dayStartTime = dayStartTime.subtract(1, 'day');\n  }\n  if (nightEndTime.isBefore(dayNightTime)) {\n    nightEndTime = nightEndTime.add(1, 'day');\n  }\n  // now if we're +/- 24h on either side we have to adjust (assume no range settings > 24h)\n  if (dayStartTime.add(1, 'day') < now) {\n    dayStartTime = dayStartTime.add(1, 'day');\n    dayNightTime = dayNightTime.add(1, 'day');\n    nightEndTime = nightEndTime.add(1, 'day');\n  }\n  if (nightEndTime.subtract(1, 'day') > now) {\n    dayStartTime = dayStartTime.subtract(1, 'day');\n    dayNightTime = dayNightTime.subtract(1, 'day');\n    nightEndTime = nightEndTime.subtract(1, 'day');\n  }\n\n\n  if (ruleSummary.enableDaylightRule) {\n    ruleParts.dayRule = {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-assignment\n      startTime: dayStartTime,\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-assignment\n      endTime: dayNightTime,\n      motionDevices: ruleSummary.motionSensors,\n      controlDevice: ruleSummary.dayControlSwitch,\n      switchDevices: {...ruleSummary.dayDimmableSwitches, ...ruleSummary.dayNonDimmableSwitches}\n    };\n  }\n\n  if (ruleSummary.enableNightlightRule) {\n    ruleParts.nightRule = {\n      startTime: dayNightTime,\n      endTime: nightEndTime,\n      motionDevices: ruleSummary.motionSensors,\n      controlDevice: ruleSummary.nightControlSwitch,\n      switchDevices: {...ruleSummary.nightDimmableSwitches, ...ruleSummary.nightNonDimmableSwitches}\n    };\n  }\n\n  if (ruleSummary.enableTransitionRule) {\n    ruleParts.transitionRule = {\n      time: dayNightTime,\n      transitionOffDevices: {...ruleSummary.dayDimmableSwitches, ...ruleSummary.dayNonDimmableSwitches},\n      transitionOnDevices: {...ruleSummary.nightDimmableSwitches, ...ruleSummary.nightNonDimmableSwitches}\n    };\n  }\n\n  if (ruleSummary.enableIdleRule) {\n    ruleParts.idleRule = {\n      motionTimeout: `${ruleSummary.motionIdleTimeout}${ruleSummary.motionIdleTimeoutUnit === IntervalUnit.Minute ? 'm' : 's'}`,\n      motionDevices: ruleSummary.motionSensors,\n      switchDevices: {...ruleSummary.dayDimmableSwitches, ...ruleSummary.dayNonDimmableSwitches, ...ruleSummary.nightDimmableSwitches, ...ruleSummary.nightNonDimmableSwitches}\n    };\n  }\n\n  return ruleParts;\n};\n\nexport default getRulesFromSummary;\n\n","import React from 'react';\nimport {useDrag} from 'react-dnd';\nimport global from '../constants/global';\nimport {createDragConfig, IDragAndDropType} from '../factories/dragAndDropFactory';\nimport {ControlContainer, ControlIcon, ControlLogo, ControlStatus} from '../factories/styleFactory';\nimport {IActiveControl} from '../types/interfaces';\nimport {IRuleComponentType} from '../types/sharedContracts';\n\nconst getRuleIcon = (ruleType: IRuleComponentType): '🌞' | '🌚' | '🔀' | '💤' => ruleType === 'daylight' ? '🌞' : ruleType === 'nightlight' ? '🌚' : ruleType === 'transition' ? '🔀' : '💤';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst Rule: React.FC<IRuleProps> = ({rulePartId, ruleName, ruleType, time, isRuleActive, isRuleEnabled, isKeyRule, setActiveDevice, isLinkedActive, isLockedActive}) => {\n  const dragId = `${ruleType.toLowerCase()}-${rulePartId}`;\n  const [collected, drag] = useDrag(() => (createDragConfig(IDragAndDropType.Rule, rulePartId, ruleName, ruleType)));\n  const iconography = `${isKeyRule ? '🔑' : ''}${isRuleEnabled ? '' : '🚫'}`;\n\n  return (\n    <ControlContainer\n      ref={drag}\n      {...collected}\n      rgb={isRuleActive ? `${global.palette.control.rgb.rule}` : `${global.palette.control.rgb.inactive}`}\n      onMouseEnter={() => setActiveDevice({name: ruleName, id: `${IDragAndDropType.Rule}-${dragId}`})}\n      onMouseLeave={() => setActiveDevice(null)}\n      onTouchStart={() => setActiveDevice({name: ruleName, id: `${IDragAndDropType.Rule}-${dragId}`})}\n      onTouchEnd={() => setActiveDevice(null)}\n      isLinkedActive={isLinkedActive}\n      isLockedActive={isLockedActive}\n    >\n      <ControlLogo>\n        {getRuleIcon(ruleType)}\n      </ControlLogo>\n      <ControlStatus>\n        {time}\n      </ControlStatus>\n      {!!iconography && (\n        <ControlIcon>\n          {iconography}\n        </ControlIcon>\n      )}\n    </ControlContainer>\n  );\n};\n\nexport interface IRuleProps {\n  rulePartId: string;\n  ruleName: string;\n  ruleType: IRuleComponentType;\n  time: string;\n  isRuleActive: boolean;\n  isRuleEnabled: boolean;\n  isKeyRule: boolean;\n  setActiveDevice: (value: IActiveControl | null) => void;\n  isLinkedActive?: boolean;\n  isLockedActive?: boolean;\n}\n\nexport default Rule;\n","import React, {useEffect, useRef} from 'react';\nimport dayjs, {Dayjs} from 'dayjs';\nimport isBetween from 'dayjs/plugin/isBetween';\nimport {Room as IRoom} from '@smartthings/core-sdk';\nimport {useEventSource, useEventSourceListener} from 'react-sse-hooks';\nimport styled from 'styled-components';\nimport {useLocalStorage} from 'use-hooks';\nimport {DeviceContext, IApp, IDevice, IRule, ISseEvent} from '../types/sharedContracts';\nimport global from '../constants/global';\nimport Device from './Device';\nimport Power from './Power';\nimport {useDeviceContext} from '../store/DeviceContextStore';\nimport SmartApp from './SmartApp';\nimport getRulesFromSummary, {IRuleIdle, IRuleRange, IRuleTransition} from '../operations/getRulesFromSummary';\nimport Rule from './Rule';\nimport {IActiveControl} from '../types/interfaces';\n\ndayjs.extend(isBetween);\n\nconst numDevicesPerRow = 5;\n\n// 32E624 green bg\n// ideas: 🪄 🔮 🕹 🔌 💾 🔐 🔑 🔂\n\nconst isRuleActive = (startTime: Dayjs, endTime: Dayjs): boolean => dayjs().isBetween(startTime, endTime);\nconst isLinkedRuleActive = (rule: IRuleRange, rulePart: string, ruleBaseId: string, activeDeviceId?: string): boolean => !!activeDeviceId && (\n  rule.controlDevice.deviceId === activeDeviceId ||\n    Object.values(rule.switchDevices).some(d => d.deviceId === activeDeviceId) ||\n    activeDeviceId.endsWith(`${rulePart.toLowerCase()}-${ruleBaseId}`)\n);\n\nconst isLockedRuleActive = (lockedDevices: IDevice[], rule: IRuleRange, rulePart: string, ruleBaseId: string, activeDeviceId?: string): boolean =>\n  !!activeDeviceId && (\n    rule.controlDevice.deviceId === activeDeviceId || (\n      lockedDevices.some(d => d) &&\n      isRuleActive(rule.startTime, rule.endTime) &&\n      activeDeviceId.endsWith(`${rulePart.toLowerCase()}-${ruleBaseId}`)\n    )\n  );\n\nconst isLinkedDeviceActive = (roomRuleSummaries: Record<string, { dayRule?: IRuleRange; nightRule?: IRuleRange; transitionRule?: IRuleTransition; idleRule?: IRuleIdle }>, deviceId: string, activeDeviceId?: string): boolean =>\n  !!activeDeviceId && (\n    (deviceId === activeDeviceId) ||\n    Object.entries(roomRuleSummaries).some(([k, v]) => (\n      (activeDeviceId.endsWith(`daylight-${k}`) && v.dayRule &&\n        (v.dayRule.controlDevice.deviceId === deviceId || Object.values(v.dayRule.switchDevices).some(d => d.deviceId === deviceId))) ||\n      (activeDeviceId.endsWith(`nightlight-${k}`) && v.nightRule &&\n        (v.nightRule.controlDevice.deviceId === deviceId || Object.values(v.nightRule.switchDevices).some(d => d.deviceId === deviceId)))\n    )));\n\nconst isLockedDeviceActive = (lockedDevices: IDevice[], roomRuleSummaries: Record<string, { dayRule?: IRuleRange; nightRule?: IRuleRange; transitionRule?: IRuleTransition; idleRule?: IRuleIdle }>, deviceId: string, activeDeviceId?: string): boolean =>\n  !!activeDeviceId && (\n    (lockedDevices.some(d => d.deviceId === deviceId) && deviceId === activeDeviceId) ||\n    (Object.entries(roomRuleSummaries).some(([k, v]) =>\n      ((activeDeviceId.endsWith(`daylight-${k}`) && v.dayRule && v.dayRule.controlDevice.deviceId === deviceId && isRuleActive(v.dayRule.startTime, v.dayRule.endTime)) ||\n       (activeDeviceId.endsWith(`nightlight-${k}`) && v.nightRule && v.nightRule.controlDevice.deviceId === deviceId && isRuleActive(v.nightRule.startTime, v.nightRule.endTime)))))\n  );\n\nconst RoomContainer = styled.div`\n  height: 100%;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  align-content: center;\n  align-items: center;\n  justify-content: flex-start;\n  border: 1px solid gray;\n  border-radius: 4px;\n`;\n\n// each 'app' gets a row, up to 5 devices / row, plus reserved rows\nconst RoomControlGrid = styled.div<{numDevices: number; numApps: number}>`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  grid-template-rows:\n    max-content\n    repeat(${props => Math.max(Math.ceil(props.numDevices / numDevicesPerRow) + props.numApps, 1)}, max-content)\n    1fr;\n  grid-template-columns: [device-start app-start] 1fr [device-end app-end device-start rule-day-start] 1fr [device-end rule-day-end device-start rule-trans-start] 1fr [device-end rule-trans-end device-start rule-night-start] 1fr [device-end rule-night-end device-start rule-idle-start] 1fr [device-end rule-idle-end];\n  // grid-template-columns: repeat(5, 1fr);\n  // grid-template-rows: max-content 1fr 2rem;\n  gap: ${global.measurements.deviceGridGap};\n`;\n\nconst RoomControlPower = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  grid-column-start: 1;\n  grid-column-end: 1;\n  grid-row-start: 1;\n  grid-row-end: 1;\n`;\n\nconst RoomControlTitle = styled.div`\n  width: 100%;\n  display: flex;\n  grid-column-start: 2;\n  grid-column-end: 5;\n  grid-row-start: 1;\n  grid-row-end: 1;\n  justify-content: center;\n  align-items: center;\n  font-size: larger;\n  font-weight: 700;\n`;\n\nconst RoomControlTitleText = styled.span`\n  padding: 0 0.5rem;\n  background: #${global.palette.control.rgb.inactive}${global.palette.control.alpha};\n  box-shadow: 0 8px 32px 0 rgba( 31, 38, 135, 0.37 );\n  backdrop-filter: blur( 15px );\n  border-radius: 10px;\n  border: 1px solid rgba( 255, 255, 255, 0.18 );\n`;\n\nconst RoomControlTitleFloor = styled.span`\n  padding: 0 0.5rem;\n  background: #${global.palette.control.rgb.floor}${global.palette.control.alpha};\n  box-shadow: 0 8px 32px 0 rgba( 31, 38, 135, 0.37 );\n  backdrop-filter: blur( 15px );\n  border-radius: 50%;\n  border: 1px solid rgba( 255, 255, 255, 0.18 );\n  font-size: small;\n  color: #000;\n`;\n\nconst RoomControlFavorite = styled.button`\n  all: unset;\n  display: flex;\n  grid-column-start: 5;\n  grid-column-end: 6;\n  grid-row-start: 1;\n  grid-row-end: 1;\n  justify-content: center;\n  align-items: center;\n  font-size: larger;\n  font-weight: 700;\n  cursor: pointer;\n`;\n\nconst RoomControlDevice = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  &:nth-child(5n+1) {\n    grid-column: device-start 1 / device-end 1\n  }\n  &:nth-child(5n+2) {\n    grid-column: device-start 2 / device-end 2\n  }\n  &:nth-child(5n+3) {\n    grid-column: device-start 3 / device-end 3\n  }\n  &:nth-child(5n+4) {\n    grid-column: device-start 4 / device-end 4\n  }\n  &:nth-child(5n+5) {\n    grid-column: device-start 5 / device-end 5\n  }\n`;\n\nconst RoomControlRule = styled.div<{gridLineName: string}>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  grid-column: ${props => props.gridLineName}-start / ${props => props.gridLineName}-end\n`;\n\nconst RoomControlDeviceLabel = styled.div`\n  display: flex;\n  grid-column-start: 1;\n  grid-column-end: -1;\n  grid-row-start: -2;\n  grid-row-end: -1;\n  justify-content: center;\n  align-items: end;\n  min-height: 2rem;\n`;\n\nconst Room: React.FC<IRoomProps> = ({room, isFavoriteRoom, setFavoriteRoom}) => {\n  const {deviceData, setDeviceData} = useDeviceContext();\n  const [activeDevice, setActiveDevice] = useLocalStorage(`smartAppRoom-${room.roomId as string}-activeDevice`, null as IActiveControl | null);\n  const domRef = useRef<HTMLDivElement>(null);\n\n  const roomSwitches = deviceData.switches.filter(d => d.roomId === room.roomId);\n  const roomLocks = deviceData.locks.filter(d => d.roomId === room.roomId);\n  const roomMotion = deviceData.motion.filter(d => d.roomId === room.roomId);\n  const findRuleForRoom = (): IRule[] => {\n    const iRoomRules = deviceData.rules.filter(r => r.ruleSummary?.motionSensors.some((m: DeviceContext) => roomMotion.some(rm => rm.deviceId === m.deviceId)));\n    return iRoomRules;\n  };\n  const findAppsForRoom = (): IApp[] => {\n    const iRoomApps = deviceData.apps.filter(a => a.ruleSummary?.motionSensors.some((m: DeviceContext) => roomMotion.some(rm => rm.deviceId === m.deviceId)));\n    return iRoomApps;\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const roomRules = findRuleForRoom();\n  const roomApps = findAppsForRoom();\n\n  const roomRuleSummaries = roomApps.reduce((p, c) => {\n    p[c.installedAppId] = getRulesFromSummary(c.ruleSummary);\n    return p;\n  }, {} as Record<string, { dayRule?: IRuleRange; nightRule?: IRuleRange; transitionRule?: IRuleTransition; idleRule?: IRuleIdle }>);\n\n  const activeRuleControlSwitches = Object.values(roomRuleSummaries).map(r => {\n    if (r.dayRule && dayjs().isBetween(r.dayRule.startTime, r.dayRule.endTime)) {\n      return r.dayRule.controlDevice;\n    }\n    if (r.nightRule && dayjs().isBetween(r.nightRule.startTime, r.nightRule.endTime)) {\n      return r.nightRule.controlDevice;\n    }\n    return null;\n  }).filter(d => !!d);\n\n  const lockedDevices = roomSwitches.filter(r => activeRuleControlSwitches.some(did => r.deviceId === did!.deviceId));\n\n  const numDevices = roomSwitches.length + roomLocks.length + roomMotion.length;\n\n  const deviceEventSource = useEventSource({\n    source: `${process.env.REACT_APP_APIHOST as string}/events`\n  });\n\n  const roomParts = room.name!.split(' - ');\n  const roomName = roomParts.length > 1 ? roomParts[1] : roomParts[0];\n  const roomFloor = roomParts.length > 1 ? roomParts[0] : null;\n\n  const handleSwitchDeviceEvent = async (eventData: ISseEvent): Promise<void> => {\n    const targetDevice = roomSwitches.find(s => s.deviceId === eventData.deviceId);\n    if (targetDevice) {\n      targetDevice.value = eventData.value;\n      await setDeviceData({...deviceData}, {revalidate: false});\n    }\n  };\n\n  const handleLockDeviceEvent = async (eventData: ISseEvent): Promise<void> => {\n    const targetDevice = roomLocks.find(s => s.deviceId === eventData.deviceId);\n    if (targetDevice) {\n      targetDevice.value = eventData.value;\n      await setDeviceData({...deviceData}, {revalidate: false});\n    }\n  };\n\n  const handleMotionDeviceEvent = async (eventData: ISseEvent): Promise<void> => {\n    const targetDevice = roomMotion.find(s => s.deviceId === eventData.deviceId);\n    if (targetDevice) {\n      targetDevice.value = eventData.value;\n      await setDeviceData({...deviceData}, {revalidate: false});\n    }\n  };\n\n  useEffect(() => {\n    if (isFavoriteRoom) {\n      domRef.current!.scrollIntoView({behavior: 'smooth'});\n    }\n  }, [isFavoriteRoom]);\n\n  // TODO: these can probably just go into the store context handler?\n  useEventSourceListener<ISseEvent>({\n    source: deviceEventSource,\n    startOnInit: true,\n    event: {\n      name: 'lock',\n      listener: ({data}) => handleLockDeviceEvent(data)\n    }\n  }, [deviceEventSource]);\n\n  useEventSourceListener<ISseEvent>({\n    source: deviceEventSource,\n    startOnInit: true,\n    event: {\n      name: 'motion',\n      listener: ({data}) => handleMotionDeviceEvent(data)\n    }\n  }, [deviceEventSource]);\n\n  useEventSourceListener<ISseEvent>({\n    source: deviceEventSource,\n    startOnInit: true,\n    event: {\n      name: 'switch',\n      listener: ({data}) => handleSwitchDeviceEvent(data)\n    }\n  }, [deviceEventSource]);\n\n  return (\n    // eslint-disable-next-line no-undefined\n    <RoomContainer ref={domRef}>\n      <RoomControlGrid\n        numDevices={numDevices}\n        numApps={roomApps.length}\n      >\n        {roomSwitches.map(s => (\n          <RoomControlDevice\n            key={`switch-${s.deviceId}`}\n          >\n            <Device\n              device={s}\n              deviceType=\"Switch\"\n              setActiveDevice={setActiveDevice}\n              isLocked={lockedDevices.some(d => d.deviceId === s.deviceId)}\n              isLinkedActive={isLinkedDeviceActive(roomRuleSummaries, s.deviceId, activeDevice?.id)}\n              isLockedActive={isLockedDeviceActive(lockedDevices, roomRuleSummaries, s.deviceId, activeDevice?.id)}\n            />\n          </RoomControlDevice>\n        ))}\n        {roomLocks.map(s => (\n          <RoomControlDevice\n            key={`lock-${s.deviceId}`}\n          >\n            <Device\n              device={s}\n              deviceType=\"Lock\"\n              setActiveDevice={setActiveDevice}\n            />\n          </RoomControlDevice>\n        ))}\n        {roomMotion.map(s => (\n          <RoomControlDevice\n            key={`motion-${s.deviceId}`}\n          >\n            <Device\n              device={s}\n              deviceType=\"Motion\"\n              setActiveDevice={setActiveDevice}\n            />\n          </RoomControlDevice>\n        ))}\n        {roomApps.map(a => {\n          const ruleParts = getRulesFromSummary(a.ruleSummary);\n\n          return (\n            <React.Fragment key={`rulesection-${a.installedAppId}`}>\n              <RoomControlRule\n                key={`app-${a.installedAppId}`}\n                gridLineName=\"app\"\n              >\n                <SmartApp\n                  app={a}\n                  isRuleEnabled={true}\n                  setActiveDevice={setActiveDevice}\n                />\n              </RoomControlRule>\n              {ruleParts.dayRule && (\n                <RoomControlRule\n                  key={`rulepart-daylight-${a.installedAppId}`}\n                  gridLineName=\"rule-day\"\n                >\n                  <Rule\n                    rulePartId={a.installedAppId}\n                    ruleName={`${a.displayName!} Daylight Rule`}\n                    ruleType=\"daylight\"\n                    time={`${ruleParts.dayRule.startTime.format('hA')} - ${ruleParts.dayRule.endTime.format('hA')}`}\n                    isRuleActive={isRuleActive(ruleParts.dayRule.startTime, ruleParts.dayRule.endTime)}\n                    isRuleEnabled={a.ruleSummary.enableDaylightRule && !a.ruleSummary.temporaryDisableDaylightRule}\n                    isKeyRule={isRuleActive(ruleParts.dayRule.startTime, ruleParts.dayRule.endTime) && lockedDevices.some(d => d)}\n                    setActiveDevice={setActiveDevice}\n                    isLinkedActive={isLinkedRuleActive(ruleParts.dayRule, 'daylight', a.installedAppId, activeDevice?.id)}\n                    isLockedActive={isLockedRuleActive(lockedDevices, ruleParts.dayRule, 'daylight', a.installedAppId, activeDevice?.id)}\n                  />\n                </RoomControlRule>\n              )}\n              {ruleParts.transitionRule && (\n                <RoomControlRule\n                  key={`rulepart-transition-${a.installedAppId}`}\n                  gridLineName=\"rule-trans\"\n                >\n                  <Rule\n                    rulePartId={a.installedAppId}\n                    ruleName={`${a.displayName!} Transition Rule`}\n                    ruleType=\"transition\"\n                    time={ruleParts.transitionRule.time.format('hA')}\n                    isRuleActive={true}\n                    isRuleEnabled={a.ruleSummary.enableTransitionRule && !a.ruleSummary.temporaryDisableTransitionRule}\n                    isKeyRule={false}\n                    setActiveDevice={setActiveDevice}\n                  />\n                </RoomControlRule>\n              )}\n              {ruleParts.nightRule && (\n                <RoomControlRule\n                  key={`rulepart-nightlight-${a.installedAppId}`}\n                  gridLineName=\"rule-night\"\n                >\n                  <Rule\n                    rulePartId={a.installedAppId}\n                    ruleName={`${a.displayName!} Nightlight Rule`}\n                    ruleType=\"nightlight\"\n                    time={`${ruleParts.nightRule.startTime.format('hA')} - ${ruleParts.nightRule.endTime.format('hA')}`}\n                    isRuleActive={isRuleActive(ruleParts.nightRule.startTime, ruleParts.nightRule.endTime)}\n                    isRuleEnabled={a.ruleSummary.enableNightlightRule && !a.ruleSummary.temporaryDisableNightlightRule}\n                    isKeyRule={isRuleActive(ruleParts.nightRule.startTime, ruleParts.nightRule.endTime) && lockedDevices.some(d => d)}\n                    setActiveDevice={setActiveDevice}\n                    isLinkedActive={isLinkedRuleActive(ruleParts.nightRule, 'nightlight', a.installedAppId, activeDevice?.id)}\n                    isLockedActive={isLockedRuleActive(lockedDevices, ruleParts.nightRule, 'nightlight', a.installedAppId, activeDevice?.id)}\n                  />\n                </RoomControlRule>\n              )}\n              {ruleParts.idleRule && (\n                <RoomControlRule\n                  key={`rulepart-idle-${a.installedAppId}`}\n                  gridLineName=\"rule-idle\"\n                >\n                  <Rule\n                    rulePartId={a.installedAppId}\n                    ruleName={`${a.displayName!} Idle Rule`}\n                    ruleType=\"idle\"\n                    time={ruleParts.idleRule.motionTimeout}\n                    isRuleActive={true}\n                    isRuleEnabled={a.ruleSummary.enableIdleRule && !a.ruleSummary.temporaryDisableIdleRule}\n                    isKeyRule={false}\n                    setActiveDevice={setActiveDevice}\n                  />\n                </RoomControlRule>\n              )}\n            </React.Fragment>\n          );\n        })}\n        <RoomControlPower>\n          <Power\n            key={`power-${room.roomId!}`}\n            room={room}\n            isPowerOn={roomSwitches.some(s => s.value === 'on')}\n            setActiveDevice={setActiveDevice}\n          />\n        </RoomControlPower>\n        <RoomControlTitle>\n          <RoomControlTitleText>\n            {roomName}\n          </RoomControlTitleText>\n        </RoomControlTitle>\n        <RoomControlFavorite onClick={() => setFavoriteRoom(room.roomId!)}>\n          {!!roomFloor && (\n            <RoomControlTitleFloor>\n              {roomFloor}\n            </RoomControlTitleFloor>\n          )}\n          {isFavoriteRoom ? '🌟' : '⭐'}\n        </RoomControlFavorite>\n        <RoomControlDeviceLabel>\n          {activeDevice?.name}\n        </RoomControlDeviceLabel>\n      </RoomControlGrid>\n    </RoomContainer>\n  );\n};\n\nexport interface IRoomProps {\n  room: IRoom;\n  isFavoriteRoom: boolean;\n  setFavoriteRoom: (roomId: string) => void;\n}\n\nexport default Room;\n","import React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useParams} from 'react-router-dom';\nimport styled from 'styled-components';\nimport {useLocalStorage} from 'use-hooks';\nimport global from '../constants/global';\nimport {DashboardSubTitle, DashboardTitle} from '../factories/styleFactory';\nimport {useDeviceContext} from '../store/DeviceContextStore';\nimport DeviceControls from './DeviceControls';\nimport Room from './Room';\n\nconst printColumnN = (n: number, columns: number): string => `\n    .room-grid-container:nth-child(${columns}n${n !== columns ? `+${n}` : ''}) {\n      grid-column: room-start ${n} / room-end ${n};\n    }\n  `;\n\nconst printColumns1ToN = (columns: number): string => {\n  const iteratorArray: number[] = [];\n  for (let i = 1; i <= columns; i++) {\n    iteratorArray.push(i);\n  }\n  return iteratorArray\n    .map(i => printColumnN(i, columns))\n    .join('');\n};\n\nconst printColumnBreakpoints = (roomCount: number): string => {\n  const deviceControlsContainerWidth = parseFloat(global.measurements.controlsContainerWidth);\n  const roomContainerWidth =\n    (global.measurements.devicesPerRow * (parseFloat(global.measurements.deviceWidth) + (2 * parseFloat(global.measurements.deviceMargin)))) +\n    ((global.measurements.devicesPerRow + 1) * parseFloat(global.measurements.deviceGridGap));\n\n  // eslint-disable-next-line no-magic-numbers\n  return [1, 2, 3, 4, 5].map(i => `\n    ${i !== 1 ? `@media (min-width: ${deviceControlsContainerWidth + (i * roomContainerWidth)}rem) {` : ''}\n      ${printColumns1ToN(i)}\n      .device-controls-grid-container {\n        grid-row: 1 / ${Math.ceil((roomCount / i) + 1)};\n      }\n    ${i !== 1 ? '}' : ''}\n  `).join('');\n};\n\nconst DashboardRoomGrid = styled.div<{roomCount: number}>`\n    display: grid;\n    grid-template-columns: [control-start] max-content [control-end] repeat(${props => props.roomCount}, [room-start] 1fr [room-end]);\n    gap: ${global.measurements.dashboardGridGap};\n    grid-auto-rows: 1fr;\n    ${props => printColumnBreakpoints(props.roomCount)}\n`;\n\n// grid-row constraint set in generated grid class mediaquery statement above\nconst RoomGridContainer = styled.div`\n`;\n\n// grid-row constraint set in generated grid class mediaquery statement above\nconst DeviceControlsGridContainer = styled.div`\n  grid-column: control-start / control-end;\n`;\n\nconst DashboardRooms: React.FC = () => {\n  const {t} = useTranslation();\n  const {deviceData} = useDeviceContext();\n  const [favoriteRoom, setFavoriteRoom] = useLocalStorage<string>('favorite-room', '');\n\n  const routeInfo = useParams<{locationId: string}>();\n  const locationId = routeInfo.locationId ?? ''; // empty location id should not happen\n\n  return (\n    <>\n      <DashboardTitle>\n        {locationId}\n      </DashboardTitle>\n      <DashboardSubTitle>\n        {t('dashboard.room.sectionName')}\n      </DashboardSubTitle>\n      <DashboardRoomGrid roomCount={deviceData?.rooms?.length || 0}>\n        {deviceData && deviceData?.rooms?.map(r => (\n          <RoomGridContainer\n            key={`room-${r.roomId as string}`}\n            className=\"room-grid-container\"\n          >\n            <Room\n              room={r}\n              isFavoriteRoom={favoriteRoom === r.roomId}\n              setFavoriteRoom={setFavoriteRoom}\n            />\n          </RoomGridContainer>\n        ))}\n        <DeviceControlsGridContainer\n          className=\"device-controls-grid-container\"\n        >\n          <DeviceControls />\n        </DeviceControlsGridContainer>\n      </DashboardRoomGrid>\n    </>\n  );\n};\n\nexport default DashboardRooms;\n","import {LocationItem} from '@smartthings/core-sdk';\r\n\r\nconst getLocations = async (): Promise<IResponseLocations> => {\r\n  const response = await fetch(`${process.env.REACT_APP_APIHOST as string}/locations`);\r\n  return await response.json() as IResponseLocations;\r\n};\r\n\r\nexport type IResponseLocations = LocationItem[];\r\n\r\nexport default getLocations;","import React, {useEffect, useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport {useTranslation} from 'react-i18next';\nimport styled from 'styled-components';\nimport global from '../constants/global';\nimport getLocations, {IResponseLocations} from '../operations/getLocations';\n\nconst LocationsGrid = styled.div`\n    display: grid;\n    grid-template-columns: 1fr;\n    gap: ${global.measurements.dashboardGridGap};\n    grid-auto-rows: minmax(100px, auto);\n`;\n\nconst Locations: React.FC<LocationsProps> = () => {\n  const {t} = useTranslation();\n\n  const [locations, setLocations] = useState<IResponseLocations>([]);\n\n  useEffect(() => {\n    const getLocationsAsync = async (): Promise<void> => {\n      setLocations(await getLocations());\n    };\n\n    void getLocationsAsync();\n  }, []);\n\n  return (\n    <LocationsGrid>\n      {Object.values(locations).map(l => (\n        <React.Fragment key={`location-${l.locationId}`}>\n          <Link\n            key={`location-${l.locationId}-rooms`}\n            to={`/dashboard/${l.locationId}/rooms`}\n          >\n            <div>\n              {`${t('location.identifier')}: ${l.locationId}`}\n            </div>\n            <div>\n              {`${t('location.name')}: ${l.name} Rooms`}\n            </div>\n          </Link>\n          <Link\n            key={`location-${l.locationId}-scenes`}\n            to={`/dashboard/${l.locationId}/scenes`}\n          >\n            <div>\n              {`${t('location.identifier')}: ${l.locationId} Scenes`}\n            </div>\n            <div>\n              {`${t('location.name')}: ${l.name}`}\n            </div>\n          </Link>\n          <Link\n            key={`location-${l.locationId}-rules`}\n            to={`/dashboard/${l.locationId}/rules`}\n          >\n            <div>\n              {`${t('location.identifier')}: ${l.locationId} Rules`}\n            </div>\n            <div>\n              {`${t('location.name')}: ${l.name}`}\n            </div>\n          </Link>\n          <Link\n            key={`location-${l.locationId}-apps`}\n            to={`/dashboard/${l.locationId}/apps`}\n          >\n            <div>\n              {`${t('location.identifier')}: ${l.locationId} Apps`}\n            </div>\n            <div>\n              {`${t('location.name')}: ${l.name}`}\n            </div>\n          </Link>\n        </React.Fragment>\n      ))}\n    </LocationsGrid>\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface LocationsProps {\n}\n\nexport default Locations;\n","import React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useParams} from 'react-router-dom';\nimport styled from 'styled-components';\nimport global from '../constants/global';\nimport {DashboardTitle, DashboardSubTitle, DashboardGridColumnHeader} from '../factories/styleFactory';\nimport {useDeviceContext} from '../store/DeviceContextStore';\n\nconst DashboardAppGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    gap: ${global.measurements.dashboardGridGap};\n    grid-auto-rows: minmax(100px, auto);\n`;\n\nconst DashboardApps: React.FC = () => {\n  const {t} = useTranslation();\n  const {deviceData} = useDeviceContext();\n\n  const routeInfo = useParams<{locationId: string}>();\n  const locationId = routeInfo.locationId ?? ''; // empty location id should not happen\n\n  return (\n    <>\n      <DashboardTitle>\n        {locationId}\n      </DashboardTitle>\n      <DashboardSubTitle>\n        {t('dashboard.installedApp.sectionName')}\n      </DashboardSubTitle>\n      <DashboardAppGrid>\n        <DashboardGridColumnHeader>\n          {t('dashboard.installedApp.header.name')}\n        </DashboardGridColumnHeader>\n        <DashboardGridColumnHeader>\n          {t('dashboard.installedApp.header.ruleId')}\n        </DashboardGridColumnHeader>\n        <DashboardGridColumnHeader>\n          {t('dashboard.installedApp.header.status')}\n        </DashboardGridColumnHeader>\n        <DashboardGridColumnHeader>\n          {t('dashboard.installedApp.header.ownerId')}\n        </DashboardGridColumnHeader>\n        {deviceData && deviceData.apps?.map(a => (\n          <React.Fragment key={`apps-${a.installedAppId}`}>\n            <span>\n              {a.displayName}\n            </span>\n            <span>\n              {a.appId}\n            </span>\n            <span>\n              {a.installedAppId}\n            </span>\n            <span>\n              {a.lastUpdatedDate}\n            </span>\n          </React.Fragment>\n        ))}\n      </DashboardAppGrid>\n    </>\n  );\n};\n\nexport default DashboardApps;\n","import React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useParams} from 'react-router-dom';\nimport styled from 'styled-components';\nimport global from '../constants/global';\nimport {DashboardTitle, DashboardGridColumnHeader} from '../factories/styleFactory';\nimport {useDeviceContext} from '../store/DeviceContextStore';\nimport {DeviceContext, IRule} from '../types/sharedContracts';\n\nconst DashboardRuleGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n    gap: ${global.measurements.dashboardGridGap};\n    grid-auto-rows: minmax(100px, auto);\n`;\n\nconst DashboardRules: React.FC = () => {\n  const {t} = useTranslation();\n  const {deviceData} = useDeviceContext();\n\n  const routeInfo = useParams<{locationId: string}>();\n  const locationId = routeInfo.locationId ?? ''; // empty location id should not happen\n\n  const deleteRule = async (location: string, ruleId: string): Promise<void> => {\n    await fetch(`${process.env.REACT_APP_APIHOST as string}/${location}/rule/${ruleId}`, {method: 'DELETE'});\n  };\n\n  const findRoomName = (rule: IRule): string | undefined => {\n    const motionDevice = deviceData.motion.find(m =>\n      rule.ruleSummary?.motionSensors.find((mm: DeviceContext): boolean => m.deviceId === mm.deviceId)\n    );\n    const room = deviceData.rooms.find(r => r.roomId === motionDevice?.roomId);\n    return room?.name;\n  };\n\n  return (\n    <>\n      <DashboardTitle>\n        {locationId}\n      </DashboardTitle>\n      <DashboardRuleGrid>\n        <DashboardGridColumnHeader>\n          {t('dashboard.rule.header.name')}\n        </DashboardGridColumnHeader>\n        <DashboardGridColumnHeader>\n          {t('dashboard.rule.header.ruleId')}\n        </DashboardGridColumnHeader>\n        <DashboardGridColumnHeader>\n          {t('dashboard.rule.header.status')}\n        </DashboardGridColumnHeader>\n        <DashboardGridColumnHeader>\n          {t('dashboard.rule.header.ownerId')}\n        </DashboardGridColumnHeader>\n        <DashboardGridColumnHeader>\n          {t('dashboard.rule.header.manage')}\n        </DashboardGridColumnHeader>\n        {deviceData && deviceData.rules?.map(s => (\n          <React.Fragment key={`rules-${s.id}`}>\n            <span>\n              {s.name}\n            </span>\n            <span>\n              {s.id}\n            </span>\n            <span>\n              {s.executionLocation}\n            </span>\n            <span>\n              {findRoomName(s)}\n            </span>\n            <button onClick={() => deleteRule(locationId, s.id)}>\n            DELETE\n            </button>\n          </React.Fragment>\n        ))}\n      </DashboardRuleGrid>\n    </>\n  );\n};\n\nexport default DashboardRules;\n","import React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useParams} from 'react-router-dom';\nimport styled from 'styled-components';\nimport global from '../constants/global';\nimport {DashboardTitle, DashboardSubTitle, DashboardGridColumnHeader} from '../factories/styleFactory';\nimport {useDeviceContext} from '../store/DeviceContextStore';\n\nconst DashboardSceneGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n    gap: ${global.measurements.dashboardGridGap};\n`;\n\nconst DashboardScenes: React.FC = () => {\n  const {t} = useTranslation();\n  const {deviceData} = useDeviceContext();\n\n  const routeInfo = useParams<{locationId: string}>();\n  const locationId = routeInfo.locationId ?? ''; // empty location id should not happen\n\n  return (\n    <>\n      <DashboardTitle>\n        {locationId}\n      </DashboardTitle>\n      <DashboardSubTitle>\n        {t('dashboard.scene.sectionName')}\n      </DashboardSubTitle>\n      <DashboardSceneGrid>\n        <DashboardGridColumnHeader>\n          {t('dashboard.scene.header.sceneName')}\n        </DashboardGridColumnHeader>\n        <DashboardGridColumnHeader>\n          {t('dashboard.scene.header.sceneId')}\n        </DashboardGridColumnHeader>\n        <DashboardGridColumnHeader>\n          {t('dashboard.scene.header.createdBy')}\n        </DashboardGridColumnHeader>\n        <DashboardGridColumnHeader>\n          {t('dashboard.scene.header.createdDate')}\n        </DashboardGridColumnHeader>\n        <DashboardGridColumnHeader>\n          {t('dashboard.scene.header.lastExecutedDate')}\n        </DashboardGridColumnHeader>\n        {deviceData && deviceData?.scenes?.map(s => (\n          <React.Fragment key={`scene-${s.sceneId as string}`}>\n            <span>\n              {s.sceneName}\n            </span>\n            <span>\n              {s.sceneId}\n            </span>\n            <span>\n              {s.createdBy}\n            </span>\n            <span>\n              {s.createdDate}\n            </span>\n            <span>\n              {s.lastExecutedDate}\n            </span>\n          </React.Fragment>\n        ))}\n      </DashboardSceneGrid>\n    </>\n  );\n};\n\nexport default DashboardScenes;\n","import React from 'react';\r\nimport {Routes, Route, Link} from 'react-router-dom';\r\nimport {SWRConfig} from 'swr';\r\nimport {DndProvider} from 'react-dnd';\r\nimport {HTML5Backend} from 'react-dnd-html5-backend';\r\nimport {TouchBackend} from 'react-dnd-touch-backend';\r\nimport {isMobile} from 'react-device-detect';\r\nimport './App.scss';\r\n// Components\r\nimport Home from './components/Home';\r\nimport RuleExamples from './components/RuleExamples';\r\nimport BasicTemplates from './components/BasicTemplates';\r\nimport AdvancedTemplates from './components/AdvancedTemplates';\r\nimport SmartApps from './components/SmartApps';\r\nimport DashboardRooms from './components/DashboardRooms';\r\nimport {EventSourceProvider} from 'react-sse-hooks';\r\nimport Locations from './components/Locations';\r\nimport {DeviceContextStore} from './store/DeviceContextStore';\r\nimport DashboardApps from './components/DashboardApps';\r\nimport DashboardRules from './components/DashboardRules';\r\nimport DashboardScenes from './components/DashboardScenes';\r\n\r\nconst App: React.FC = () => (\r\n  <DndProvider backend={isMobile ? TouchBackend : HTML5Backend}>\r\n    <SWRConfig\r\n      value={{\r\n        onSuccess: (d, k) => {\r\n          localStorage.setItem(k, JSON.stringify(d));\r\n        },\r\n        onError: (_, k) => {\r\n          localStorage.removeItem(k);\r\n        }\r\n      }}\r\n    >\r\n      <EventSourceProvider>\r\n        <nav className=\"navbar \">\r\n          <div className=\"container\">\r\n            <div className=\"navbar-brand\">\r\n              <a\r\n                className=\"navbar-item\"\r\n                href=\"/\"\r\n              >\r\n                        Rule Helper\r\n              </a>\r\n\r\n\r\n              <div\r\n                className=\"navbar-burger burger\"\r\n                data-target=\"navMenubd-example\"\r\n              >\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              id=\"navMenubd-example\"\r\n              className=\"navbar-menu\"\r\n            >\r\n              <div className=\"navbar-start\">\r\n                <Link\r\n                  className=\"navbar-item\"\r\n                  to=\"/rule-examples\"\r\n                >\r\n                            Rule Examples\r\n                </Link>\r\n                <Link\r\n                  className=\"navbar-item\"\r\n                  to=\"/basic-templates\"\r\n                >\r\n                            Basic Templates\r\n                </Link>\r\n                <Link\r\n                  className=\"navbar-item\"\r\n                  to=\"/advanced-templates\"\r\n                >\r\n                            Advanced Templates\r\n                </Link>\r\n                <Link\r\n                  className=\"navbar-item\"\r\n                  to=\"/smartapps\"\r\n                >\r\n                            Installed Apps\r\n                </Link>\r\n                <Link\r\n                  className=\"navbar-item\"\r\n                  to=\"/locations\"\r\n                >\r\n                            Locations\r\n                </Link>\r\n              </div>\r\n\r\n              <div className=\"navbar-end\">\r\n                <a\r\n                  className=\"navbar-item is-hidden-desktop-only\"\r\n                  href=\"https://github.com/jgthms/bulma\"\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  <span className=\"icon\">\r\n                    <i className=\"fa fa-github\"></i>\r\n                  </span>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </nav>\r\n        <section className=\"container main-content\">\r\n          <Routes>\r\n            <Route\r\n              path=\"/\"\r\n              element={<Home />}\r\n            />\r\n            <Route\r\n              path=\"rule-examples\"\r\n              element={<RuleExamples />}\r\n            />\r\n            <Route\r\n              path=\"basic-templates\"\r\n              element={<BasicTemplates />}\r\n            />\r\n            <Route\r\n              path=\"advanced-templates\"\r\n              element={<AdvancedTemplates />}\r\n            />\r\n            <Route\r\n              path=\"smartapps\"\r\n              element={<SmartApps />}\r\n            />\r\n            <Route\r\n              path=\"locations\"\r\n              element={<Locations />}\r\n            />\r\n            <Route\r\n              path=\"dashboard/:locationId/rooms\"\r\n              element={(\r\n                <DeviceContextStore locationId=\"b2f46f0a-a5bf-4265-b206-51fcd14bb58d\">\r\n                  <DashboardRooms />\r\n                </DeviceContextStore>\r\n              )}\r\n            >\r\n            </Route>\r\n            <Route\r\n              path=\"dashboard/:locationId/scenes\"\r\n              element={(\r\n                <DeviceContextStore locationId=\"b2f46f0a-a5bf-4265-b206-51fcd14bb58d\">\r\n                  <DashboardScenes />\r\n                </DeviceContextStore>\r\n              )}\r\n            >\r\n            </Route>\r\n            <Route\r\n              path=\"dashboard/:locationId/rules\"\r\n              element={(\r\n                <DeviceContextStore locationId=\"b2f46f0a-a5bf-4265-b206-51fcd14bb58d\">\r\n                  <DashboardRules />\r\n                </DeviceContextStore>\r\n              )}\r\n            >\r\n            </Route>\r\n            <Route\r\n              path=\"dashboard/:locationId/apps\"\r\n              element={(\r\n                <DeviceContextStore locationId=\"b2f46f0a-a5bf-4265-b206-51fcd14bb58d\">\r\n                  <DashboardApps />\r\n                </DeviceContextStore>\r\n              )}\r\n            >\r\n            </Route>\r\n          </Routes>\r\n        </section>\r\n      </EventSourceProvider>\r\n    </SWRConfig>\r\n  </DndProvider>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createGlobalStyle} from 'styled-components';\nimport initLocale from './operations/initLocale';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n// App component\nimport App from './App';\n\nconst GlobalStyles = createGlobalStyle`\n  /* bug with react-scripts ~4.0.3 that overlays iframe after time */\n  body {\n    iframe:last-of-type {\n      display: none !important;\n    }\n  }\n`;\n\nvoid initLocale();\n\nReactDOM.render(\n  <Router>\n    <GlobalStyles />\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nvoid reportWebVitals();\n"],"sourceRoot":""}